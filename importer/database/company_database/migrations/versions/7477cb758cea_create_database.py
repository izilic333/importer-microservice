"""Create database

Revision ID: 7477cb758cea
Revises: e01ad0d304ec
Create Date: 2021-05-16 00:55:33.357143

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7477cb758cea'
down_revision = 'e01ad0d304ec'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('main_twitter')
    op.drop_table('vending_company_assigned_device')
    op.drop_table('cleaning_report_log')
    op.drop_table('timestamps__administration_devicetype')
    op.drop_table('administration_device_machines')
    op.drop_table('combo_recipes')
    op.drop_table('third_party_integration')
    op.drop_table('route_truckstockitem')
    op.drop_table('commission_group')
    op.drop_table('timestamps__administration_device')
    op.drop_table('client_types')
    op.drop_table('televend_dynamic_config_history')
    op.drop_table('transaction_tenders')
    op.drop_table('machineclusters_assigned_machines')
    op.drop_table('telecom_operators')
    op.drop_table('vehicles')
    op.drop_table('cpi_device')
    op.drop_table('device_status')
    op.drop_table('settings')
    op.drop_table('administration_devicehistory')
    op.drop_table('django_migrations')
    op.drop_table('timestamps__administration_machineoperation')
    op.drop_table('route_routeproduct')
    op.drop_table('administration_historicalimporterftpconfigurationmasterdata')
    op.drop_table('django_site')
    op.drop_table('auth_group')
    op.drop_table('administration_payterdevice')
    op.drop_table('unicum_collection')
    op.drop_table('single_denominations')
    op.drop_table('broker_topup')
    op.drop_table('route_routemachinefileupload')
    op.drop_table('payment_device_type')
    op.drop_table('cash_snapshot_scheduled_jobs')
    op.drop_table('administration_machineperiodexclusion')
    op.drop_table('broker_brokercredentials')
    op.drop_table('commission_percentage_range')
    op.drop_table('company_packing_models')
    op.drop_table('timestamps__administration_device_machines')
    op.drop_table('product_rotation_assignments')
    op.drop_table('product_rotation_groups')
    op.drop_table('operation_mode')
    op.drop_table('time_interval')
    op.drop_table('layout_components')
    op.drop_table('timestamps__administration_companyaccess')
    op.drop_table('djcelery_intervalschedule')
    op.drop_table('sagemcom_televend_request')
    op.drop_table('skill_levels')
    op.drop_table('third_party_integration_type')
    op.drop_table('broker_unsentwallettransaction')
    op.drop_table('external_cashless_references')
    op.drop_table('auth_user_user_permissions')
    op.drop_table('administration_sipdevice')
    op.drop_table('combo_products')
    op.drop_table('machine_column_vend_data')
    op.drop_table('route_truckstock')
    op.drop_table('custom_users_assigned_clusters')
    op.drop_table('programmed_cleaning_log')
    op.drop_table('vending_companies')
    op.drop_table('fill_log')
    op.drop_table('mdb_event_codes')
    op.drop_table('broker_order')
    op.drop_table('payment_devices')
    op.drop_table('cashflow_collections')
    op.drop_table('cro_fiscal_mapping')
    op.drop_table('machineclusters_fillers')
    op.drop_table('timestamps__machine_data')
    op.drop_table('administration_deletedcolumns')
    op.drop_table('call_centre_reporting_channel')
    op.drop_table('user_skill_assignments')
    op.drop_table('djcelery_workerstate')
    op.drop_table('route_routemachineproduct')
    op.drop_table('machine_recipe_components')
    op.drop_table('administration_importerftpconfiguration')
    op.drop_table('machine_columns_tags')
    op.drop_table('timestamps__machines')
    op.drop_table('auth_permission')
    op.drop_table('djcelery_periodictask')
    op.drop_table('administration_warehouse_working_time')
    op.drop_table('machine_empty_columns_log')
    op.drop_table('event_codes')
    op.drop_table('communication_log')
    op.drop_table('machineclusters')
    op.drop_table('transaction_items_taxes')
    op.drop_table('vat_number_examples')
    op.drop_table('timestamps__machine_types')
    op.drop_table('transaction_tenders_coins')
    op.drop_table('auth_user_groups')
    op.drop_table('product_categories')
    op.drop_table('administration_device')
    op.drop_table('machine_columns')
    op.drop_table('exporters_distrilogaudit')
    op.drop_table('broker_authenticatemail')
    op.drop_table('administration_micromarket365device')
    op.drop_table('dex_device')
    op.drop_table('regions')
    op.drop_table('vends_per_machine_product_monthly')
    op.drop_table('products')
    op.drop_table('vends_per_company')
    op.drop_table('auth_user')
    op.drop_table('nayax_device')
    op.drop_table('administration_importtype')
    op.drop_table('broker_mobiletoken')
    op.drop_table('bulk_command_process')
    op.drop_table('component_packing_size')
    op.drop_table('exporters_ltomachine')
    op.drop_table('recipes')
    op.drop_table('clients')
    op.drop_table('machine_empty_products_log')
    op.drop_table('tenant')
    op.drop_table('author_infos')
    op.drop_table('products_tags')
    op.drop_table('televend_config')
    op.drop_table('tax_rates')
    op.drop_table('administration_unicumdevice')
    op.drop_table('exporters_processederpfile')
    op.drop_table('transactions')
    op.drop_table('exporters_ltoinducedcc')
    op.drop_table('transaction_tenders_bills')
    op.drop_table('event_correlations')
    op.drop_table('transaction_items')
    op.drop_table('custom_users_working_time')
    op.drop_table('transaction_summaries_fees')
    op.drop_table('machine_data')
    op.drop_table('machine_model')
    op.drop_table('cash_collection_snapshot_request')
    op.drop_table('cash_bag_tracking')
    op.drop_table('route_routemachineproductcolumn')
    op.drop_table('cashbag_conforms')
    op.drop_table('report_eventhistoric')
    op.drop_table('product_brands')
    op.drop_table('administration_instantsystemsdevice')
    op.drop_table('user_roles')
    op.drop_table('administration_historicalvendingcompany')
    op.drop_table('skill_types')
    op.drop_table('external_planogram_application_log')
    op.drop_table('machine_types')
    op.drop_table('warehouse_management')
    op.drop_table('machine_brand')
    op.drop_table('machine_statuses')
    op.drop_table('djcelery_periodictasks')
    op.drop_table('flyway_schema_history')
    op.drop_table('machine_product_components')
    op.drop_table('packing_models')
    op.drop_table('cashflow_groups')
    op.drop_table('broker_televendsession')
    op.drop_table('temp_custom_users_assigned_machines')
    op.drop_table('custom_users_assigned_companies')
    op.drop_table('machine_recipes')
    op.drop_table('celery_taskmeta')
    op.drop_table('layout_columns_tags')
    op.drop_table('route_productlistconfig')
    op.drop_table('time_period')
    op.drop_table('machine_locations_working_time')
    op.drop_table('cleaning_schedule_log')
    op.drop_table('broker_wallettransaction')
    op.drop_table('event_codes_settings_per_company')
    op.drop_table('sagemcom_machine')
    op.drop_table('vend_fiscal_details')
    op.drop_table('custom_users_assigned_types')
    op.drop_table('user_absence_period')
    op.drop_table('django_cron_cronjoblog')
    op.drop_table('administration_vendingcompanyimporter')
    op.drop_table('administration_fiscalizationprovider')
    op.drop_table('custom_users')
    op.drop_table('django_session')
    op.drop_table('administration_devicetype')
    op.drop_table('dashboard_configuration')
    op.drop_table('product_components')
    op.drop_table('exporters_distrilogorder')
    op.drop_table('layout_columns')
    op.drop_table('route_route')
    op.drop_table('administration_vendondevice')
    op.drop_table('administration_historicalcustomuser')
    op.drop_table('exporters_lto_inventory')
    op.drop_table('machinecluster_groups')
    op.drop_table('product_templates_tags')
    op.drop_table('transaction_summaries_taxes')
    op.drop_table('bulk_command_process_item')
    op.drop_table('meter_readings')
    op.drop_table('administration_televenddevice')
    op.drop_table('tags')
    op.drop_table('machines_tags')
    op.drop_table('contract')
    op.drop_table('events')
    op.drop_table('auth_group_permissions')
    op.drop_table('route_routemachine')
    op.drop_table('translations')
    op.drop_table('evadts_televend_dump')
    op.drop_table('authtoken_token')
    op.drop_table('timestamps__administration_televenddevice')
    op.drop_table('django_content_type')
    op.drop_table('cashbags')
    op.drop_table('product_templates')
    op.drop_table('vend_delays')
    op.drop_table('meter_types')
    op.drop_table('administration_newroutewarehouse')
    op.drop_table('cash_bag_location_type')
    op.drop_table('vend_details')
    op.drop_table('administration_order')
    op.drop_table('djcelery_taskstate')
    op.drop_table('administration_historicalimporterftpconfiguration')
    op.drop_table('product_packing_size')
    op.drop_table('admin_notify_items')
    op.drop_table('packing_name')
    op.drop_table('transaction_items_fees')
    op.drop_table('date_period')
    op.drop_table('machine_categories')
    op.drop_table('transaction_summaries')
    op.drop_table('timestamps__auth_user')
    op.drop_table('date_period_time_periods')
    op.drop_table('temp_location_clusters_machines')
    op.drop_table('custom_users_assigned_machines_directly')
    op.drop_table('administration_notelemetrydevice')
    op.drop_table('business_model')
    op.drop_table('broker_account')
    op.drop_table('custom_users_assigned_clients')
    op.drop_table('administration_importerftpconfigurationmasterdata')
    op.drop_table('administration_companyaccess')
    op.drop_table('administration_warehouse')
    op.drop_table('vends')
    op.drop_table('contract_commission_rule')
    op.drop_table('machine_product_components_tags')
    op.drop_table('djcelery_crontabschedule')
    op.drop_table('cashflow_collection_correlations')
    op.drop_table('fill_event')
    op.drop_table('celery_tasksetmeta')
    op.drop_table('machine_locations')
    op.drop_table('product_component_items')
    op.drop_table('cro_fiscal_code')
    op.drop_table('report_televendevent')
    op.drop_table('median_buckets')
    op.drop_table('process_versions')
    op.drop_table('cash_collection_induction')
    op.drop_table('machine_empty_components_log')
    op.drop_table('administration_orderproduct')
    op.drop_table('administration_ordercomponent')
    op.drop_table('administration_vcoredevice')
    op.drop_table('administration_newroutehelpers')
    op.drop_table('administration_machineoperation')
    op.drop_table('timestamps__vending_companies')
    op.drop_table('vend_correlations')
    op.drop_table('events_assigned_users')
    op.drop_table('custom_commission_payment_period')
    op.drop_table('administration_prodelfidevice')
    op.drop_table('user_role_template')
    op.drop_table('cleaning_report_status')
    op.drop_table('ghost_columns')
    op.drop_table('vends_per_machine_product_daily')
    op.drop_table('administration_cremdevice')
    op.drop_table('machines')
    op.drop_table('exporters_ltowarehouse')
    op.drop_table('machine_commands')
    op.drop_table('bulk_vend_processor_insert')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bulk_vend_processor_insert',
    sa.Column('transaction_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('correlation_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('tenant_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_external_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('machine_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('pid', sa.VARCHAR(length=40), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('company_external_id', sa.VARCHAR(length=100), server_default=sa.text('NULL::character varying'), autoincrement=False, nullable=True),
    sa.Column('company_timezone', sa.VARCHAR(length=50), server_default=sa.text('NULL::character varying'), autoincrement=False, nullable=True),
    sa.Column('column', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity_since_init', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('value', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('value_since_init', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('card_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('processingtimestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('price_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_name', sa.VARCHAR(length=100), server_default=sa.text('NULL::character varying'), autoincrement=False, nullable=True),
    sa.Column('product_external_id', sa.VARCHAR(length=100), server_default=sa.text('NULL::character varying'), autoincrement=False, nullable=True),
    sa.Column('product_price', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('product_is_composite', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('location_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('location_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('location_external_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('payment_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('is_ghost_vend', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('vend_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('data', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('partition', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('offset', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('device_type', sa.VARCHAR(length=20), autoincrement=False, nullable=True)
    )
    op.create_table('machine_commands',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('command', sa.VARCHAR(length=25), autoincrement=False, nullable=False),
    sa.Column('data', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('sent', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='machine_commands_machine_id_19e42052_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['custom_users.user_ptr_id'], name='machine_commands_user_id_d59f75d2_fk_custom_users_user_ptr_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machine_commands_pkey')
    )
    op.create_table('exporters_ltowarehouse',
    sa.Column('uuid', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('generated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('hash', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('build_number', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('file_path', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.CheckConstraint('build_number >= 0', name='exporters_ltowarehouse_build_number_check'),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='exporters_ltowarehou_company_id_46b67fda_fk_vending_c', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['order_id'], ['administration_order.id'], name='exporters_ltowarehou_order_id_26a125c8_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('uuid', name='exporters_ltowarehouse_pkey')
    )
    op.create_table('machines',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('machines_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('televend_configuration', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price_multiplier', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('product_warning_percentage', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('component_warning_percentage', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('mail_notification', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('shelf_life_warning', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('shelf_life_warning_mail_notification', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('data_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('deleted_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('location_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_template_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('service_user', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('external_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('urgency', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('urgency_reason', sa.VARCHAR(length=8), autoincrement=False, nullable=False),
    sa.Column('recommended_visit_after', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('urgent_visit_after', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('use_column_mapping', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('last_stock_calculation', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('stock', sa.NUMERIC(precision=8, scale=5), autoincrement=False, nullable=False),
    sa.Column('stock_data', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('offset_mapping', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('daily_urgencies', postgresql.ARRAY(sa.SMALLINT()), autoincrement=False, nullable=False),
    sa.Column('daily_urgency_reasons', postgresql.ARRAY(sa.VARCHAR(length=8)), autoincrement=False, nullable=False),
    sa.Column('send_eva_to_erp', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('generate_eva_on_cash_collection', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('tax_address', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('tax_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('erp_integration_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('send_lto_to_erp', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('use_dm', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('use_dm_as_proxy', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('new_route_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('new_route_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('new_route_details', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('new_route_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('warehouse_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('current_pricelist_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('pricelist_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('use_second_column_mapping', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('external_temperature_info', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('vat_exemption', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('cashless_1_offset', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('postponed_product_rotation', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('fiscal_group', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('fiscalization_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('machine_tax_location', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('fiscal_memory_installation_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('fiscal_memory_serial_number', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('fiscal_memory_serial_type', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('local_kkt_number', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('local_kkt_type', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('is_eva_dts_readout_enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('recommended_daily_dispenses', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('target_monthly_performance', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('manufacture_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('purchase_price', sa.NUMERIC(precision=12, scale=2), autoincrement=False, nullable=True),
    sa.Column('barcode', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('fiscal_machine_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('fiscal_location_tag', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('model_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('brand_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('external_modification', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('mobile_app_eva_readout', postgresql.ENUM('QR Code', 'USB Cable', 'Bluetooth', name='mobile_app_eva_readout_enum'), autoincrement=False, nullable=True),
    sa.Column('cash_snapshot', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.CheckConstraint('fiscalization_type >= 0', name='machines_fiscalization_type_check'),
    sa.CheckConstraint('recommended_visit_after >= 0', name='machines_recommended_visit_after_check'),
    sa.CheckConstraint('urgency >= 0', name='machines_urgency_check'),
    sa.CheckConstraint('urgent_visit_after >= 0', name='machines_urgent_visit_after_check'),
    sa.ForeignKeyConstraint(['author_info_id'], ['author_infos.id'], name='machines_author_info_id_fbf7749d_fk_author_infos_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['category_id'], ['machine_categories.id'], name='machines_category_id_b91f714c_fk_machine_categories_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name='machines_client_id_e396e233_fk_clients_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['data_id'], ['machine_data.id'], name='machines_data_id_9e8476fb_fk_machine_data_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['deleted_by_id'], ['custom_users.user_ptr_id'], name='machines_deleted_by_id_a2a45ede_fk_custom_users_user_ptr_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['location_id'], ['machine_locations.id'], name='machines_location_id_c2440667_fk_machine_locations_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='machines_owner_id_7c4fb688_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['product_template_id'], ['product_templates.id'], name='machines_product_template_id_626d18d8_fk_product_templates_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['service_user'], ['custom_users.user_ptr_id'], name='machines_service_user_3f003452_fk_custom_users_user_ptr_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['status_id'], ['machine_statuses.id'], name='machines_status_id_73cefdff_fk_machine_statuses_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['type_id'], ['machine_types.id'], name='machines_type_id_baf8badf_fk_machine_types_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['warehouse_id'], ['administration_warehouse.id'], name='machines_warehouse_id_29db1db9_fk_administration_warehouse_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machines_pkey'),
    sa.UniqueConstraint('author_info_id', name='machines_author_info_id_key'),
    sa.UniqueConstraint('data_id', name='machines_data_id_key'),
    sa.UniqueConstraint('status_id', name='machines_status_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('administration_cremdevice',
    sa.Column('device_ptr_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_import_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['device_ptr_id'], ['administration_device.id'], name='administration_cremd_device_ptr_id_ac219d60_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('device_ptr_id', name='administration_cremdevice_pkey')
    )
    op.create_table('vends_per_machine_product_daily',
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vend_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('insert_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('device', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('value', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('rowcnt', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.UniqueConstraint('machine_id', 'product_id', 'vend_date', 'insert_date', 'device', name='uq_vends_per_machine_product_daily')
    )
    op.create_table('ghost_columns',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('ghost_columns_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('index', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='ghost_columns_machine_id_b5f680e1_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='ghost_columns_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('cleaning_report_status',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('cleaning_report_status_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('planned', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('skipped', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('cleaned', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('blocked', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('overdue_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='cleaning_report_status_machine_id_machine_fk', ondelete='SET NULL', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='cleaning_report_status_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_role_template',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_role_template_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('machine_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('machine_edit', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('machine_device_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('machine_device_edit', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('machine_stock_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('machine_stock_edit', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('machine_planogram_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('machine_planogram_edit', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('product_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('product_edit', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('report_refill_log_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('report_vend_revenue_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('report_overview_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('report_vend_list_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('cash_details_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('event_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('event_edit', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('route_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('route_view_assigned', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('route_edit', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('user_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('user_edit', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('machine_assign_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('machine_assign_edit', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('cash_flow_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('cash_flow_induce', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('cash_conformity_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('erp_integration_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('erp_integration_edit', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('filling_route_assign_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('event_assign_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('report_builder_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('administration_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('importer', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('importer_edit', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('importer_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('task_manager_edit', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('task_manager_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('warehouse_edit', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('warehouse_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('meter_readings_edit', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('meter_readings_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('planogram_analysis_view', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('report_routing_reports_view', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('product_view_assigned', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('routing_configuration_view', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('routing_configuration_edit', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('report_transaction_list_view', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('contract_list_view', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('contract_list_edit', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('reports_generator_view', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('tax_report_generator_view', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('moneybag_tracking_view', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('call_centre_configuration_edit', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('call_centre_configuration_view', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('planer_edit', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('planer_view', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('spare_parts_edit', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('spare_parts_view', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('stream_edit', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('stream_view', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('global_manage_brand_model_view', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('global_manage_brand_model_edit', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('fiscal_setup_view', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('fiscal_setup_edit', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('evoca_horeca_application', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('televend_cloud_application', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('custom_forms_view', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('custom_forms_edit', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('event_configuration_view', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('event_configuration_edit', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_role_template_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('administration_prodelfidevice',
    sa.Column('device_ptr_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_import_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['device_ptr_id'], ['administration_device.id'], name='administration_prode_device_ptr_id_5ee2a66c_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('device_ptr_id', name='administration_prodelfidevice_pkey')
    )
    op.create_table('custom_commission_payment_period',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('contract_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('period', postgresql.DATERANGE(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['contract_id'], ['contract.id'], name='custom_commission_payment_period_contract_id_contract_fk', ondelete='CASCADE', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='custom_commission_payment_period_pkey')
    )
    op.create_table('events_assigned_users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('customuser_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['customuser_id'], ['custom_users.user_ptr_id'], name='events_assigned_user_customuser_id_d0e85d7d_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name='events_assigned_users_event_id_6a55f797_fk_events_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='events_assigned_users_pkey'),
    sa.UniqueConstraint('event_id', 'customuser_id', name='events_assigned_users_event_id_customuser_id_3f0f7bb5_uniq')
    )
    op.create_table('vend_correlations',
    sa.Column('correlation_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('vend_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ts', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('correlation_id', name='vend_correlations_pkey')
    )
    op.create_table('timestamps__vending_companies',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('insert_timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('update_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='timestamps__vending_companies_pkey')
    )
    op.create_table('administration_machineoperation',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('events_tracking', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('stock_tracking', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('routing', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('no_sales_window', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('no_sales_window_any', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('no_sales_window_cashless', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('no_sales_window_cashless_2', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mode', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('mode_pending', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('no_sales_window_cashless_3', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('undefined_column_warning', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('digital_signage', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('parameters', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('digital_signage_unlimited', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('meter_readings', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('price_incorrect_warning', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('manual_fill', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('allow_periodical_exclusions', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('packing_model_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('predictive_pickup_list', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('updated_by_importer', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('apply_warranty', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('warranty_period', postgresql.DATERANGE(), autoincrement=False, nullable=True),
    sa.Column('evoca_horeca', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('call_centre', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('warranty_start', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('warranty_end', sa.DATE(), autoincrement=False, nullable=True),
    sa.CheckConstraint('no_sales_window >= 0', name='administration_machineoperation_no_sales_window_check'),
    sa.CheckConstraint('no_sales_window_any >= 0', name='administration_machineoperation_no_sales_window_any_check'),
    sa.CheckConstraint('no_sales_window_cashless >= 0', name='administration_machineoperation_no_sales_window_cashless_check'),
    sa.CheckConstraint('no_sales_window_cashless_2 >= 0', name='administration_machineoperatio_no_sales_window_cashless_2_check'),
    sa.CheckConstraint('no_sales_window_cashless_3 >= 0', name='administration_machineoperatio_no_sales_window_cashless_3_check'),
    sa.CheckConstraint('warranty_end >= warranty_start', name='administration_machine_operation_warranty_end_gte_warranty_star'),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='administration_machi_machine_id_56abb16d_fk_machines_', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['packing_model_id'], ['packing_models.id'], name='administration_machineoperation_packing_model_id_fk'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['custom_users.user_ptr_id'], name='administration_machi_updated_by_id_248e271f_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='administration_machineoperation_pkey'),
    sa.UniqueConstraint('machine_id', name='administration_machineoperation_machine_id_key')
    )
    op.create_table('administration_newroutehelpers',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('route_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('route_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('last_cashcollection_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_refill_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('filler_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('insert_time', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['filler_id'], ['custom_users.user_ptr_id'], name='administration_newro_filler_id_b1498d17_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='administration_newro_machine_id_c8224120_fk_machines_', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='administration_newroutehelpers_pkey')
    )
    op.create_table('administration_vcoredevice',
    sa.Column('device_ptr_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_import_type', sa.VARCHAR(length=1), autoincrement=False, nullable=False),
    sa.Column('last_import_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['device_ptr_id'], ['administration_device.id'], name='administration_vcore_device_ptr_id_111e5497_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('device_ptr_id', name='administration_vcoredevice_pkey')
    )
    op.create_table('administration_ordercomponent',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('packing_size', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('unit', sa.VARCHAR(length=5), autoincrement=False, nullable=False),
    sa.Column('component_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['component_id'], ['product_component_items.id'], name='administration_order_component_id_3c354cd6_fk_product_c', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['order_id'], ['administration_order.id'], name='administration_order_order_id_7ef23496_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='administration_ordercomponent_pkey')
    )
    op.create_table('administration_orderproduct',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('packing_size', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('unit', sa.VARCHAR(length=5), autoincrement=False, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['administration_order.id'], name='administration_order_order_id_37a523e0_fk_administr', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='administration_orderproduct_product_id_683100d1_fk_products_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='administration_orderproduct_pkey')
    )
    op.create_table('machine_empty_components_log',
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('component_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('empty_ts', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('refill_ts', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('refill_type', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('machine_id', 'component_id', 'empty_ts', name='machine_empty_components_log_pkey')
    )
    op.create_table('cash_collection_induction',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('cash_collection_induction_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('collected_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('induce_via_mobile_app', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.CheckConstraint('status >= 0', name='cash_collection_induction_status_check'),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='cash_collection_induction_machine_id_cb5c2d87_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['custom_users.user_ptr_id'], name='cash_collection_indu_user_id_46a521fe_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='cash_collection_induction_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('process_versions',
    sa.Column('process', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('table_schema', sa.VARCHAR(length=63), autoincrement=False, nullable=False),
    sa.Column('table_name', sa.VARCHAR(length=63), autoincrement=False, nullable=False),
    sa.Column('saved_version', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('process', 'table_schema', 'table_name', name='process_versions_pkey')
    )
    op.create_table('median_buckets',
    sa.Column('bucket_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('bucket_range', postgresql.INT8RANGE(), autoincrement=False, nullable=True)
    )
    op.create_table('report_televendevent',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('data', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('acknowledged', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('message_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='report_televendevent_machine_id_a49ff81a_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['message_id'], ['communication_log.id'], name='report_televendevent_message_id_2ef4fc67_fk_communica', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='report_televendevent_pkey')
    )
    op.create_table('cro_fiscal_code',
    sa.Column('code', sa.VARCHAR(length=5), autoincrement=False, nullable=False),
    sa.Column('code_description_cro', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('code_description_eng', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('code', name='cro_fiscal_code_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('product_component_items',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('product_component_items_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('unit', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('stock', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('weight', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('shelf_life', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('blacklisted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('barcode', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('unit_converter', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('use_packing', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('caption', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('purchase_price', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_info_id'], ['author_infos.id'], name='product_component_it_author_info_id_dd822a56_fk_author_in', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='product_component_it_owner_id_73be4bcf_fk_vending_c', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='product_component_items_pkey'),
    sa.UniqueConstraint('author_info_id', name='product_component_items_author_info_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('machine_locations',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('machine_locations_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('company', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('city', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('latitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('longitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('weekday_mask', sa.VARCHAR(length=7), autoincrement=False, nullable=False),
    sa.Column('no_sales_window', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('no_sales_window_cashless', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cluster_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('external_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('urgency', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('daily_urgencies', postgresql.ARRAY(sa.SMALLINT()), autoincrement=False, nullable=False),
    sa.Column('no_sales_window_any', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('no_sales_window_cashless_2', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('no_sales_window_cashless_3', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('suggested_address', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.CheckConstraint('no_sales_window >= 0', name='machine_locations_no_sales_window_check'),
    sa.CheckConstraint('no_sales_window_any >= 0', name='machine_locations_no_sales_window_any_check'),
    sa.CheckConstraint('no_sales_window_cashless >= 0', name='machine_locations_no_sales_window_cashless_check'),
    sa.CheckConstraint('no_sales_window_cashless_2 >= 0', name='machine_locations_no_sales_window_cashless_2_check'),
    sa.CheckConstraint('no_sales_window_cashless_3 >= 0', name='machine_locations_no_sales_window_cashless_3_check'),
    sa.CheckConstraint('urgency >= 0', name='machine_locations_urgency_check'),
    sa.ForeignKeyConstraint(['author_info_id'], ['author_infos.id'], name='machine_locations_author_info_id_65fcecbd_fk_author_infos_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['cluster_id'], ['regions.id'], name='machine_locations_cluster_id_fd511546_fk_location_clusters_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='machine_locations_owner_id_df51f11e_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machine_locations_pkey'),
    sa.UniqueConstraint('author_info_id', name='machine_locations_author_info_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('celery_tasksetmeta',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('taskset_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('result', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('date_done', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('hidden', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='celery_tasksetmeta_pkey'),
    sa.UniqueConstraint('taskset_id', name='celery_tasksetmeta_taskset_id_key')
    )
    op.create_table('fill_event',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('fill_event_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('filling', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_fill', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('empty_facings', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('component_stock', sa.NUMERIC(precision=7, scale=2), autoincrement=False, nullable=True),
    sa.Column('product_stock', sa.NUMERIC(precision=7, scale=2), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('route_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('new_route_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('new_route_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('manual_fill', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('started', 'completed', 'failed', name='fill_event_status'), autoincrement=False, nullable=True),
    sa.Column('insert_time', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.CheckConstraint('empty_facings >= 0', name='fill_event_empty_facings_check'),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='fill_event_machine_id_e2ba98df_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['route_id'], ['route_route.id'], name='fill_event_route_id_f69ceeaf_fk_route_route_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['custom_users.user_ptr_id'], name='fill_event_user_id_bfec85ff_fk_custom_users_user_ptr_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='fill_event_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('cashflow_collection_correlations',
    sa.Column('correlation_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('cash_collection_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('ts', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('correlation_id', name='cashflow_collection_correlations_pkey')
    )
    op.create_table('djcelery_crontabschedule',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('djcelery_crontabschedule_id_seq'::regclass)"), nullable=False),
    sa.Column('minute', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('hour', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('day_of_week', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('day_of_month', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('month_of_year', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='djcelery_crontabschedule_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('machine_product_components_tags',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('machineproductcomponent_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tags_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['machineproductcomponent_id'], ['machine_product_components.id'], name='machine_product_comp_machineproductcompon_81420f9e_fk_machine_p', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['tags_id'], ['tags.id'], name='machine_product_components_tags_tags_id_82119d9f_fk_tags_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machine_product_components_tags_pkey'),
    sa.UniqueConstraint('machineproductcomponent_id', 'tags_id', name='machine_product_componen_machineproductcomponent__084cac26_uniq')
    )
    op.create_table('contract_commission_rule',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('contract_commission_rule_id_seq'::regclass)"), nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('fixed', 'percentage', name='commission_type_enum'), autoincrement=False, nullable=False),
    sa.Column('calculated', postgresql.ENUM('per product', 'per machine', 'per all machines', 'on revenue', 'on profit', name='commission_calculation_enum'), autoincrement=False, nullable=False),
    sa.Column('applied_to', postgresql.ENUM('any machine type', 'any product type', 'composite products', 'non-composite products', 'composite product machine', 'non-composite product machine', 'combo machine', name='commission_apply_on_enum'), autoincrement=False, nullable=False),
    sa.Column('is_minimal', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('on_all_amount', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('amount', sa.NUMERIC(precision=10, scale=4), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['commission_group.id'], name='contract_commission_rule_group_id_group_fk', ondelete='CASCADE', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='contract_commission_rule_pkey'),
    sa.UniqueConstraint('group_id', 'type', 'calculated', 'applied_to', name='contract_commission_rule_group_id_type_calculated_applied_t_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('vends',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('vends_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('column_index', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vend_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('value', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('price_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('data', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('failed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('banknotes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('coins', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('device', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('value_since_init', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('quantity_since_init', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_ghost', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('insert_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('column_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ghost_column_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('msg_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('card_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('in_test_mode', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('purchase_price', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('discount', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('transaction_type', postgresql.ENUM('SALE', 'RETURN', 'OVERPAY', 'TOPUP', name='transaction_type_enum'), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('televend_device_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('external_cashless_reference_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('televend_device_vend_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('basket_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('topup_media', postgresql.ENUM('DA', 'DB', 'DC', 'DD', name='topup_media_enum'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['column_id'], ['machine_columns.id'], name='vends_column_id_d16316d6_fk_machine_columns_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='vends_company_id_fkey'),
    sa.ForeignKeyConstraint(['external_cashless_reference_id'], ['external_cashless_references.id'], name='vends_external_cashless_reference_id_fkey'),
    sa.ForeignKeyConstraint(['ghost_column_id'], ['ghost_columns.id'], name='vends_ghost_column_id_a9ea7b3e_fk_ghost_columns_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='vends_machine_id_922f6105_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['msg_id'], ['communication_log.id'], name='vends_msg_id_f74047fb_fk_communication_log_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='vends_product_id_c28525b4_fk_products_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['televend_device_id'], ['administration_televenddevice.device_ptr_id'], name='vends_televend_device_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='vends_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('administration_warehouse',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('administration_warehouse_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('latitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('longitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('working_days', sa.VARCHAR(length=7), autoincrement=False, nullable=False),
    sa.Column('weekday_mask', sa.VARCHAR(length=7), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('barcode', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('cash_room', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('cash_room_type', postgresql.ENUM('Transit location', 'Final destination', name='cash_room_type_enum'), autoincrement=False, nullable=True),
    sa.Column('product_stock_management', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('spare_parts_management', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('asset_management', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='administration_wareh_owner_id_5b252eea_fk_vending_c', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='administration_warehouse_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('administration_companyaccess',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('administration_companyaccess_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('truck_stock', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('routing', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('live_routing', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('smart_routing', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('live_pickup', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('service_mobile', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('customer_mobile', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('sms_enabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('planogram_optimization', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('valid_until', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('push_product_list', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('real_time_stock', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('column_mapping', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('cash_conformity', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('eva_dts', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('lto_counter', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('lto_warehouse', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('routing_map', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('fiscalization', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('reports_builder', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('stock_tracking', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('partial_edit', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('new_route_geo_routing', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('new_route_prekitting', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('new_route_real_time_stock', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('new_route_smart_routing', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('device_location', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('lto_unit_converter', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('event_manual_resolve', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('lto_warehouse_tracking_status', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('new_route_warehouse_status', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('new_route_warehouse_status_tracking', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('route_warehouse_status', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('route_warehouse_status_tracking', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('lto_inventory', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('push_tvd_configuration', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('update_firmware', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('lto_customer_order', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('read_eva_dts', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('extra_pricelists', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('num_barcode_entries', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('meter_readings', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('vat_exemption', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('tax_reports', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('allow_empty_cashbag', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('product_rotation_groups', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('fiscal_module_b', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('fiscal_module_b_online_pause', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('fiscal_module_b_tax_system', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('pick_and_pack_application', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('product_ordering', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fiscal_module_b_provider_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('routing_reports', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('packing_per_route', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('packing_per_machine', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('packing_per_machine_default_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cash_bag_tracking', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('transaction_list', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('use_device_manager', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('contract_center', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('fiscal_module_d', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('fiscal_module_c', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('fiscal_module_c_tax_system', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('fiscal_module_c_sequence', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('fiscal_configuration', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('management_machine', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('reports_generator', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('scan_machine_barcode', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('tax_center', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('configuration_editor', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('call_centre', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('service_management', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('new_route_custom_forms_routing', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('call_centre_custom_forms', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('event_configuration', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('spare_parts_warehouse', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('fiscal_module_d_tax_system', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('cash_snapshot', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('fiscal_module_e', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('fiscal_module_e_tax_system', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('software_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('maintainer_code', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.CheckConstraint('fiscal_module_b_tax_system >= 0', name='administration_companyaccess_fiscal_module_b_tax_system_check'),
    sa.CheckConstraint('fiscal_module_c_sequence >= 0', name='fiscal_module_c_sequence_positive'),
    sa.CheckConstraint('fiscal_module_c_tax_system >= 0', name='fiscal_module_c_tax_system_positive'),
    sa.CheckConstraint('fiscal_module_d_tax_system >= 0', name='fiscal_module_d_tax_system_positive'),
    sa.CheckConstraint('fiscal_module_e_tax_system >= 0', name='fiscal_module_e_tax_system_positive'),
    sa.ForeignKeyConstraint(['fiscal_module_b_provider_id'], ['administration_fiscalizationprovider.id'], name='administration_company_fiscal_module_b_provider_fk', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['packing_per_machine_default_id'], ['packing_models.id'], name='administration_companyaccess_packing_per_machine_default_id_fk'),
    sa.PrimaryKeyConstraint('id', name='administration_companyaccess_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('administration_importerftpconfigurationmasterdata',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('ftp_path', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    sa.Column('file_delimiters', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('cron_time_hour', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('category_import_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('changed_by_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('company_importer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('vending_company_ftp_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cron_time_min', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('device', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cash_collect', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('event', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('vend', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['category_import_id'], ['administration_importtype.id'], name='administration_impor_category_import_id_c5a89fb8_fk_administr', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['changed_by_id'], ['custom_users.user_ptr_id'], name='administration_impor_changed_by_id_327ff9c8_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['company_importer_id'], ['administration_vendingcompanyimporter.id'], name='administration_impor_company_importer_id_f440a6c3_fk_administr', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['vending_company_ftp_id'], ['administration_importerftpconfiguration.id'], name='administration_impor_vending_company_ftp__52837861_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='administration_importerftpconfigurationmasterdata_pkey')
    )
    op.create_table('custom_users_assigned_clients',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('customuser_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name='custom_users_assigned_clients_client_id_a14375d0_fk_clients_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['customuser_id'], ['custom_users.user_ptr_id'], name='custom_users_assigne_customuser_id_23e68b7f_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='custom_users_assigned_clients_pkey'),
    sa.UniqueConstraint('customuser_id', 'client_id', name='custom_users_assigned_cl_customuser_id_client_id_551c148e_uniq')
    )
    op.create_table('broker_account',
    sa.Column('account_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('token_id', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['token_id'], ['broker_mobiletoken.token'], name='broker_account_token_id_3067bdc4_fk_broker_mobiletoken_token', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('account_id', name='broker_account_pkey')
    )
    op.create_table('business_model',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('business_model_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='business_model_pkey'),
    sa.UniqueConstraint('name', name='business_model_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('administration_notelemetrydevice',
    sa.Column('device_ptr_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_import_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['device_ptr_id'], ['administration_device.id'], name='administration_notel_device_ptr_id_23483b0c_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('device_ptr_id', name='administration_notelemetrydevice_pkey')
    )
    op.create_table('custom_users_assigned_machines_directly',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('customuser_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['customuser_id'], ['custom_users.user_ptr_id'], name='custom_users_assigne_customuser_id_eae25fab_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='custom_users_assigne_machine_id_9346027e_fk_machines_', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='custom_users_assigned_machines_pkey'),
    sa.UniqueConstraint('customuser_id', 'machine_id', name='custom_users_assigned_ma_customuser_id_machine_id_78bca405_uniq')
    )
    op.create_table('temp_location_clusters_machines',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('locationcluster_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('date_period_time_periods',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('dateperiod_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('timeperiod_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['dateperiod_id'], ['date_period.id'], name='date_period_time_per_dateperiod_id_8a913118_fk_date_peri', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['timeperiod_id'], ['time_period.id'], name='date_period_time_per_timeperiod_id_f16f316a_fk_time_peri', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='date_period_time_periods_pkey'),
    sa.UniqueConstraint('dateperiod_id', 'timeperiod_id', name='date_period_time_periods_dateperiod_id_timeperiod_00d468e6_uniq')
    )
    op.create_table('timestamps__auth_user',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('insert_timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('update_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='timestamps__auth_user_pkey')
    )
    op.create_table('transaction_summaries',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('transaction_summaries_id_seq'::regclass)"), nullable=False),
    sa.Column('price', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('discount', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('total', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], name='transaction_summarie_transaction_id_bfac2805_fk_transacti', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='transaction_summaries_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('machine_categories',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('machine_categories_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_info_id'], ['author_infos.id'], name='machine_categories_author_info_id_37909024_fk_author_infos_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='machine_categories_owner_id_34d2d40d_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['machine_categories.id'], name='machine_categories_parent_id_4e90bb6c_fk_machine_categories_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machine_categories_pkey'),
    sa.UniqueConstraint('author_info_id', name='machine_categories_author_info_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('date_period',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='date_period_pkey')
    )
    op.create_table('transaction_items_fees',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('value', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('count', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('total', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('transaction_item_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['transaction_item_id'], ['transaction_items.id'], name='transaction_items_fe_transaction_item_id_cec0f44f_fk_transacti', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='transaction_items_fees_pkey')
    )
    op.create_table('packing_name',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('packing_name_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('system_default', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='packing_name_owner_id_fd586b38_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='packing_name_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('admin_notify_items',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('level', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('viewed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['custom_users.user_ptr_id'], name='admin_notify_items_user_id_c011b129_fk_custom_users_user_ptr_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='admin_notify_items_pkey')
    )
    op.create_table('product_packing_size',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('barcode', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('default', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('system_default', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('unit', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('packing_name_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='product_packing_size_owner_id_0c3a242f_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['packing_name_id'], ['packing_name.id'], name='product_packing_size_packing_name_id_557d0fbf_fk_packing_n', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='product_packing_size_product_id_aecdb9ba_fk_products_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='product_packing_size_pkey')
    )
    op.create_table('administration_historicalimporterftpconfiguration',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('port', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('history_id', sa.INTEGER(), nullable=False),
    sa.Column('history_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('history_change_reason', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('history_type', sa.VARCHAR(length=1), autoincrement=False, nullable=False),
    sa.Column('changed_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('company_importer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('history_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['history_user_id'], ['auth_user.id'], name='administration_histo_history_user_id_aa44c0e4_fk_auth_user', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('history_id', name='administration_historicalimporterftpconfiguration_pkey')
    )
    op.create_table('djcelery_taskstate',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('state', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('task_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('tstamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('args', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('kwargs', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('eta', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('expires', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('result', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('traceback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('runtime', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('retries', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('hidden', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('worker_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['worker_id'], ['djcelery_workerstate.id'], name='djcelery_taskstate_worker_id_f7f57a05_fk_djcelery_', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='djcelery_taskstate_pkey'),
    sa.UniqueConstraint('task_id', name='djcelery_taskstate_task_id_key')
    )
    op.create_table('administration_order',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('administration_order_id_seq'::regclass)"), nullable=False),
    sa.Column('_status', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('pickup_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('from_warehouse', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('to_warehouse', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.CheckConstraint('_status >= 0', name='administration_order__status_check'),
    sa.ForeignKeyConstraint(['author_id'], ['custom_users.user_ptr_id'], name='administration_order_author_id_2324e166_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='administration_order_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('vend_details',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('company_vat_id', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.Column('fiscal_group', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(precision=8, scale=2), autoincrement=False, nullable=False),
    sa.Column('product_vat_id', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('product_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('payment_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.NUMERIC(precision=8, scale=2), autoincrement=False, nullable=False),
    sa.Column('company_taxation_system', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('machine_vat_id', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('bill_address', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('bill_place', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('company_key', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('cash_register_serial_id', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('cash_register_registration_id', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('fiscal_memory_id', sa.VARCHAR(length=16), autoincrement=False, nullable=False),
    sa.Column('fiscal_operator_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('document_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('shift_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('document_index', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('processed_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('fiscal_sign', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('company_status', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('machine_fiscal_option', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('vend_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('error_description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('is_success', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.CheckConstraint('company_status >= 0', name='vend_details_company_status_check'),
    sa.CheckConstraint('company_taxation_system >= 0', name='vend_details_company_taxation_system_check'),
    sa.CheckConstraint('machine_fiscal_option >= 0', name='vend_details_machine_fiscal_option_check'),
    sa.CheckConstraint('payment_type >= 0', name='vend_details_payment_type_check'),
    sa.CheckConstraint('product_vat_id >= 0', name='vend_details_product_vat_id_check'),
    sa.ForeignKeyConstraint(['vend_id'], ['vends.id'], name='vend_details_vend_id_05e4667d_fk_vends_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='vend_details_pkey'),
    sa.UniqueConstraint('vend_id', name='vend_details_vend_id_key')
    )
    op.create_table('cash_bag_location_type',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('cash_bag_location_type_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('final_destination', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='cash_bag_location_type_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('administration_newroutewarehouse',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('route_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('route_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('route_uuid', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('filler_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('warehouse_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['filler_id'], ['custom_users.user_ptr_id'], name='administration_newro_filler_id_177972c8_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='administration_newro_machine_id_21f3e7c4_fk_machines_', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['warehouse_id'], ['administration_warehouse.id'], name='administration_newro_warehouse_id_38cc08ed_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='administration_newroutewarehouse_pkey')
    )
    op.create_table('meter_types',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('meter_types_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='meter_types_owner_id_6341800b_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='meter_types_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('vend_delays',
    sa.Column('vend_date_hour', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('bucket_id', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('pid', sa.VARCHAR(length=45), autoincrement=False, nullable=False),
    sa.Column('delay_ms_sum', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('vend_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('median_delay_deviation_ms_sum', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('vend_date_hour', 'machine_id', 'pid', 'bucket_id', name='vend_delays_pkey')
    )
    op.create_table('product_templates',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('product_templates_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('product_warning_percentage', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('component_warning_percentage', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('mail_notification', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('deleted_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('pricelist_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_info_id'], ['author_infos.id'], name='product_templates_author_info_id_efc3a943_fk_author_infos_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['deleted_by_id'], ['custom_users.user_ptr_id'], name='product_templates_deleted_by_id_09f1b8a8_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='product_templates_owner_id_d62b23e7_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='product_templates_pkey'),
    sa.UniqueConstraint('author_info_id', name='product_templates_author_info_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('cashbags',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('cashbags_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('barcode', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='cashbags_company_id_26abbf0d_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='cashbags_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('django_content_type',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('django_content_type_id_seq'::regclass)"), nullable=False),
    sa.Column('app_label', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('model', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_content_type_pkey'),
    sa.UniqueConstraint('app_label', 'model', name='django_content_type_app_label_model_76bd3d3b_uniq'),
    postgresql_ignore_search_path=False
    )
    op.create_table('timestamps__administration_televenddevice',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('insert_timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('update_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='timestamps__administration_televenddevice_pkey')
    )
    op.create_table('authtoken_token',
    sa.Column('key', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='authtoken_token_user_id_35299eff_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('key', name='authtoken_token_pkey'),
    sa.UniqueConstraint('user_id', name='authtoken_token_user_id_key')
    )
    op.create_table('evadts_televend_dump',
    sa.Column('uuid', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('generated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('start', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('end', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('hash', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('previous_eva_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('build_number', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('file_path', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('cash_collection_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('initialized_by_erp', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('delivered', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('delivered_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('delivered_filename', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.CheckConstraint('build_number >= 0', name='evadts_televend_dump_build_number_check'),
    sa.ForeignKeyConstraint(['cash_collection_id'], ['cashflow_collections.id'], name='evadts_televend_dump_cash_collection_id_3f1917ee_fk_cashflow_', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='evadts_televend_dump_company_id_a50f24eb_fk_vending_c', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='evadts_televend_dump_machine_id_b940350a_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['previous_eva_id'], ['evadts_televend_dump.uuid'], name='evadts_televend_dump_previous_eva_id_0674035d_fk_evadts_te', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('uuid', name='evadts_televend_dump_pkey')
    )
    op.create_table('translations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('key', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('lang', sa.VARCHAR(length=2), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='translations_pkey')
    )
    op.create_table('route_routemachine',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('route_routemachine_id_seq'::regclass)"), nullable=False),
    sa.Column('served_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('refill', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_cash_collected', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('removed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('boxes', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('urgency', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('next_filling_date_calc', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('expiry_date_after_refill', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('urgency_reason', sa.VARCHAR(length=8), autoincrement=False, nullable=False),
    sa.Column('last_valid_date_is_set', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('route_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('added_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('daily_urgencies', postgresql.ARRAY(sa.SMALLINT()), autoincrement=False, nullable=False),
    sa.Column('daily_urgency_reasons', postgresql.ARRAY(sa.VARCHAR(length=8)), autoincrement=False, nullable=False),
    sa.Column('warehouse_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.CheckConstraint('urgency >= 0', name='route_routemachine_urgency_check'),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='route_routemachine_machine_id_b461d1e3_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['route_id'], ['route_route.id'], name='route_routemachine_route_id_2ec4db02_fk_route_route_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['warehouse_id'], ['administration_warehouse.id'], name='route_routemachine_warehouse_id_3bab020f_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='route_routemachine_pkey'),
    sa.UniqueConstraint('route_id', 'machine_id', name='route_routemachine_route_id_machine_id_59c9ca89_uniq'),
    postgresql_ignore_search_path=False
    )
    op.create_table('auth_group_permissions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], name='auth_group_permissions_group_id_b120cbf9_fk_auth_group_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], name='auth_group_permissio_permission_id_84c5c92e_fk_auth_perm', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_group_permissions_pkey'),
    sa.UniqueConstraint('group_id', 'permission_id', name='auth_group_permissions_group_id_permission_id_0cd325b0_uniq')
    )
    op.create_table('events',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('last_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('ack_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('resolved_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('level', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('data', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('ack_by_user', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('event_code_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('resolved_by_msg', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('resolved_by_user', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('started_by_msg', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('started_by_user', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('delayed_start_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('counter', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('external_event_code', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('in_test_mode', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('televend_device_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('televend_device_event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.CheckConstraint('counter >= 0', name='events_counter_check'),
    sa.ForeignKeyConstraint(['ack_by_user'], ['custom_users.user_ptr_id'], name='events_ack_by_user_bf6dc0b1_fk_custom_users_user_ptr_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='events_company_id_fkey'),
    sa.ForeignKeyConstraint(['event_code_id'], ['event_codes.id'], name='events_event_code_id_36dbe77c_fk_event_codes_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='events_machine_id_66311ec2_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['resolved_by_msg'], ['communication_log.id'], name='events_resolved_by_msg_60c4353d_fk_communication_log_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['resolved_by_user'], ['custom_users.user_ptr_id'], name='events_resolved_by_user_b05eab25_fk_custom_users_user_ptr_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['started_by_msg'], ['communication_log.id'], name='events_started_by_msg_cd8f8079_fk_communication_log_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['started_by_user'], ['custom_users.user_ptr_id'], name='events_started_by_user_42044baa_fk_custom_users_user_ptr_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['televend_device_id'], ['administration_televenddevice.device_ptr_id'], name='events_televend_device_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='events_pkey')
    )
    op.create_table('contract',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('contract_id_seq'::regclass)"), nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('number', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('commission_payment', postgresql.ENUM('all', 'monthly', 'quarterly', 'yearly', 'custom', name='commission_payment_period_enum'), autoincrement=False, nullable=True),
    sa.Column('last_modified', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sla_initial_response_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sla_initial_response_measure_unit', postgresql.ENUM('hour', 'day', 'month', name='measure_unit_enum'), autoincrement=False, nullable=True),
    sa.Column('sla_work_days', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('client_priority', postgresql.ENUM('high', 'medium', 'low', name='priority_enum'), autoincrement=False, nullable=True),
    sa.Column('apply_warranty', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('warranty_start', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('warranty_end', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.CheckConstraint('end_date >= start_date', name='contract_end_date_gte_start_date_constraint'),
    sa.CheckConstraint('warranty_end >= warranty_start', name='contract_warranty_end_gte_warranty_start_constraint'),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name='contract_client_id_client_fk', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['modified_by_id'], ['custom_users.user_ptr_id'], name='contract_modified_by_id_custom_user_fk', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='contract_owner_id_vending_company_fk', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='contract_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('machines_tags',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tags_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='machines_tags_machine_id_03cc3164_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['tags_id'], ['tags.id'], name='machines_tags_tags_id_4b99f6ad_fk_tags_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machines_tags_pkey'),
    sa.UniqueConstraint('machine_id', 'tags_id', name='machines_tags_machine_id_tags_id_b1466ef9_uniq')
    )
    op.create_table('tags',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('tags_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='tags_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('administration_televenddevice',
    sa.Column('device_ptr_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sim', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('last_message_type', sa.VARCHAR(length=31), autoincrement=False, nullable=False),
    sa.Column('last_message_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_D_AUDIT_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_R_M_ASSIGN_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_R_M_ASSIGN_log', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('last_R_M_ASSIGN_reason', sa.VARCHAR(length=1), autoincrement=False, nullable=False),
    sa.Column('last_firmware_download', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_init_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_ip', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('signal_strength', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('software_version', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('televend_vmc_config_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_config_push_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_config_push_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('firmware_version', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('hardware_version', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('imei', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('imsi', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('latitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('longitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('max_pricelists_supported', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('last_televend_ip', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('mobile_country_code', sa.VARCHAR(length=8), autoincrement=False, nullable=True),
    sa.Column('mobile_network_code', sa.VARCHAR(length=8), autoincrement=False, nullable=True),
    sa.Column('cell_id', sa.VARCHAR(length=16), autoincrement=False, nullable=True),
    sa.Column('location_area_code', sa.VARCHAR(length=16), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['device_ptr_id'], ['administration_device.id'], name='administration_telev_device_ptr_id_530ad2dd_fk_administr', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['last_config_push_user_id'], ['custom_users.user_ptr_id'], name='administration_telev_last_config_push_use_75350dd7_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['televend_vmc_config_id'], ['televend_config.id'], name='administration_telev_televend_vmc_config__74ca9ade_fk_televend_', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('device_ptr_id', name='administration_televenddevice_pkey'),
    sa.UniqueConstraint('televend_vmc_config_id', name='administration_televenddevice_televend_vmc_config_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('meter_readings',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('old_value', sa.NUMERIC(precision=16, scale=6), autoincrement=False, nullable=True),
    sa.Column('new_value', sa.NUMERIC(precision=16, scale=6), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('meter_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('read_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('reading_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='meter_readings_machine_id_43ee2d64_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['meter_type_id'], ['meter_types.id'], name='meter_readings_meter_type_id_cf8088e1_fk_meter_types_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['read_by_id'], ['custom_users.user_ptr_id'], name='meter_readings_read_by_id_a0f8ace1_fk_custom_users_user_ptr_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='meter_readings_pkey')
    )
    op.create_table('bulk_command_process_item',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_status_change', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('old_firmware', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('new_firmware', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('parent_process_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='administration_machi_machine_id_15e595e0_fk_machines_', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['parent_process_id'], ['bulk_command_process.id'], name='administration_machi_parent_process_id_cac7cc14_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='administration_machinefirmwareupdate_pkey')
    )
    op.create_table('transaction_summaries_taxes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('value', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('count', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('rate', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('total', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('transaction_summary_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['transaction_summary_id'], ['transaction_summaries.id'], name='transaction_summarie_transaction_summary__1a931d0a_fk_transacti', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='transaction_summaries_taxes_pkey')
    )
    op.create_table('product_templates_tags',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('producttemplate_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tags_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['producttemplate_id'], ['product_templates.id'], name='product_templates_ta_producttemplate_id_5cdc9d17_fk_product_t', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['tags_id'], ['tags.id'], name='product_templates_tags_tags_id_d93a3f9c_fk_tags_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='product_templates_tags_pkey'),
    sa.UniqueConstraint('producttemplate_id', 'tags_id', name='product_templates_tags_producttemplate_id_tags_id_64b278b4_uniq')
    )
    op.create_table('machinecluster_groups',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('machine_cluster_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('group_name', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('locations', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machine_cluster_id'], ['machineclusters.id'], name='machinecluster_group_machine_cluster_id_d4258dfd_fk_machinecl', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machinecluster_groups_pkey')
    )
    op.create_table('exporters_lto_inventory',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('filename', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('file_path', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('generated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('export_type', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.CheckConstraint('status >= 0', name='exporters_lto_inventory_status_check'),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='exporters_lto_invent_company_id_108baafe_fk_vending_c', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='exporters_lto_inventory_pkey')
    )
    op.create_table('administration_historicalcustomuser',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=254), autoincrement=False, nullable=False),
    sa.Column('is_staff', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('date_joined', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('avatar', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('avatar_thumb', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('role', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('tel', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('preferred_language', sa.VARCHAR(length=2), autoincrement=False, nullable=False),
    sa.Column('api_service', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('uses_boxes', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('event_types', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('notify_email', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('notify_sms', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('weekday_mask', sa.VARCHAR(length=7), autoincrement=False, nullable=False),
    sa.Column('timezone', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('errors_subscription', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('product_subscription', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('info_subscription', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('import_subscription', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('mobile_notes', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('assignment_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_assigned_clients', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=False),
    sa.Column('starting_point', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('end_point', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('access_all_company', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('technician_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('device_info', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('device_notification', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('history_id', sa.INTEGER(), nullable=False),
    sa.Column('history_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('history_change_reason', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('history_type', sa.VARCHAR(length=1), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dashboard_config_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('history_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_ptr_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vehicle_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('warehouse_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('changed_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('creator_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pick_and_pack_status', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('call_center_tickets', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('cash_collector', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('starting_point_latitude', sa.NUMERIC(precision=8, scale=6), autoincrement=False, nullable=True),
    sa.Column('starting_point_longitude', sa.NUMERIC(precision=9, scale=6), autoincrement=False, nullable=True),
    sa.Column('end_point_latitude', sa.NUMERIC(precision=8, scale=6), autoincrement=False, nullable=True),
    sa.Column('end_point_longitude', sa.NUMERIC(precision=9, scale=6), autoincrement=False, nullable=True),
    sa.Column('technical_mobile_app', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['history_user_id'], ['auth_user.id'], name='administration_histo_history_user_id_611deef0_fk_auth_user', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('history_id', name='administration_historicalcustomuser_pkey')
    )
    op.create_table('administration_vendondevice',
    sa.Column('device_ptr_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_import_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_import_type', sa.VARCHAR(length=1), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['device_ptr_id'], ['administration_device.id'], name='vendon_device_device_ptr_id_01eaa6c1_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('device_ptr_id', name='vendon_device_pkey')
    )
    op.create_table('route_route',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('route_route_id_seq'::regclass)"), nullable=False),
    sa.Column('caption', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('start_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('end_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('route_type_value', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('deleted_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('filler_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('urgency_calculation_day', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('filler_address', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('predict_route', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('filler_end_address', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.CheckConstraint('urgency_calculation_day >= 0', name='route_route_urgency_calculation_day_check'),
    sa.ForeignKeyConstraint(['author_info_id'], ['author_infos.id'], name='route_route_author_info_id_5ee0affc_fk_author_infos_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='route_route_company_id_1b6db8fb_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['deleted_by_id'], ['custom_users.user_ptr_id'], name='route_route_deleted_by_id_023bdd77_fk_custom_users_user_ptr_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['filler_id'], ['custom_users.user_ptr_id'], name='route_route_filler_id_5adb9977_fk_custom_users_user_ptr_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='route_route_pkey'),
    sa.UniqueConstraint('author_info_id', name='route_route_author_info_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('layout_columns',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('layout_columns_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('index', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('max_quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('warning_quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('alarm_quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('next_fill_quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('price_2', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('notify_warning', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('combo_recipe_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('layout_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price_3', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('price_4', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('price_5', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('product_rotation_group_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('minimum_route_pickup', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['combo_recipe_id'], ['combo_recipes.id'], name='layout_columns_combo_recipe_id_363e6c89_fk_combo_recipes_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['layout_id'], ['product_templates.id'], name='layout_columns_layout_id_c7b79de5_fk_product_templates_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='layout_columns_product_id_b4f411f6_fk_products_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['product_rotation_group_id'], ['product_rotation_groups.id'], name='layout_columns_product_rotation_gro_53dfe3e1_fk_product_r', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], name='layout_columns_recipe_id_d8474f90_fk_recipes_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='layout_columns_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('exporters_distrilogorder',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('generated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('filename_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('file_path', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('hash', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('status', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.CheckConstraint('status >= 0', name='exporters_distrilogorder_status_check'),
    sa.ForeignKeyConstraint(['order_id'], ['administration_order.id'], name='exporters_distrilogo_order_id_b5645104_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='exporters_distrilogorder_pkey')
    )
    op.create_table('product_components',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.NUMERIC(precision=10, scale=4), autoincrement=False, nullable=False),
    sa.Column('component_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['product_component_items.id'], name='product_components_component_id_faa0cabc_fk_product_c', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], name='product_components_recipe_id_09b89414_fk_recipes_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='product_components_pkey')
    )
    op.create_table('dashboard_configuration',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('dashboard_configuration_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('left_col', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('right_col', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('unused', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='dashboard_configuration_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('administration_devicetype',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('administration_devicetype_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=2), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='administration_devicetype_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('django_session',
    sa.Column('session_key', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('session_data', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('expire_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('session_key', name='django_session_pkey')
    )
    op.create_table('custom_users',
    sa.Column('user_ptr_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('avatar', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('avatar_thumb', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('role', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('tel', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('preferred_language', sa.VARCHAR(length=2), autoincrement=False, nullable=False),
    sa.Column('api_service', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('uses_boxes', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('event_types', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('notify_email', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('notify_sms', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('weekday_mask', sa.VARCHAR(length=7), autoincrement=False, nullable=False),
    sa.Column('timezone', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('errors_subscription', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('product_subscription', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('info_subscription', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('mobile_notes', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dashboard_config_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vehicle_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('assignment_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('import_subscription', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('_assigned_clients', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=False),
    sa.Column('starting_point', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('end_point', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('access_all_company', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('warehouse_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('device_info', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('device_notification', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('technician_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('changed_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('creator_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pick_and_pack_status', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('call_center_tickets', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('cash_collector', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('starting_point_latitude', sa.NUMERIC(precision=8, scale=6), autoincrement=False, nullable=True),
    sa.Column('starting_point_longitude', sa.NUMERIC(precision=9, scale=6), autoincrement=False, nullable=True),
    sa.Column('end_point_latitude', sa.NUMERIC(precision=8, scale=6), autoincrement=False, nullable=True),
    sa.Column('end_point_longitude', sa.NUMERIC(precision=9, scale=6), autoincrement=False, nullable=True),
    sa.Column('technical_mobile_app', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['changed_by_id'], ['custom_users.user_ptr_id'], name='custom_users_changed_by_id_29077395_fk_custom_users_user_ptr_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='custom_users_company_id_dbdfbe0e_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['custom_users.user_ptr_id'], name='custom_users_creator_id_42994329_fk_custom_users_user_ptr_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['dashboard_config_id'], ['dashboard_configuration.id'], name='custom_users_dashboard_config_id_f3c75c55_fk_dashboard', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_ptr_id'], ['auth_user.id'], name='custom_users_user_ptr_id_3cd54edc_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_role_id'], ['user_role_template.id'], name='custom_users_user_role_id_5fb8b64d_fk_user_role_template_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], name='custom_users_vehicle_id_41c56a4a_fk_vehicles_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['warehouse_id'], ['administration_warehouse.id'], name='custom_users_warehouse_id_894e5c4d_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('user_ptr_id', name='custom_users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('administration_fiscalizationprovider',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('administration_fiscalizationprovider_id_seq'::regclass)"), nullable=False),
    sa.Column('code', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('alive', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='administration_fiscalizationprovider_pkey'),
    sa.UniqueConstraint('code', name='administration_fiscalizationprovider_code_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('administration_vendingcompanyimporter',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('administration_vendingcompanyimporter_id_seq'::regclass)"), nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('master', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('vending_company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('manual_import', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['vending_company_id'], ['vending_companies.id'], name='administration_vendi_vending_company_id_dcc88ba0_fk_vending_c', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='administration_vendingcompanyimporter_pkey'),
    sa.UniqueConstraint('vending_company_id', name='administration_vendingcompanyimporter_vending_company_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('django_cron_cronjoblog',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('code', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('is_success', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('ran_at_time', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='django_cron_cronjoblog_pkey')
    )
    op.create_table('user_absence_period',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('absence_period', postgresql.DATERANGE(), autoincrement=False, nullable=False),
    sa.Column('created_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['custom_users.user_ptr_id'], name='user_absence_period_created_by_id_daa482cb_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['updated_by_id'], ['custom_users.user_ptr_id'], name='user_absence_period_updated_by_id_a1941cee_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['custom_users.user_ptr_id'], name='user_absence_period_user_id_5c113e97_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='user_absence_period_pkey')
    )
    op.create_table('custom_users_assigned_types',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('customuser_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machinetype_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['customuser_id'], ['custom_users.user_ptr_id'], name='custom_users_assigne_customuser_id_18c9a346_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machinetype_id'], ['machine_types.id'], name='custom_users_assigne_machinetype_id_a4dd0f3c_fk_machine_t', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='custom_users_assigned_types_pkey'),
    sa.UniqueConstraint('customuser_id', 'machinetype_id', name='custom_users_assigned_ty_customuser_id_machinetyp_8c17e491_uniq')
    )
    op.create_table('vend_fiscal_details',
    sa.Column('fiscal_details', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('fiscal_descriptions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('fiscal_sign', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('tax_rate', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('base_amount', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('tax_amount', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('vend_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tax_exemption', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('deposit_refund', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['vend_id'], ['vends.id'], name='report_vend_fiscal_details_vend_id_fk'),
    sa.UniqueConstraint('vend_id', name='vend_fiscal_details_vend_id_key')
    )
    op.create_table('sagemcom_machine',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('sagemcom_machine_id_seq'::regclass)"), nullable=False),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('blocked', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('fiscal_received', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('install_sent', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='sagemcom_machine_machine_id_4464ba46_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='sagemcom_machine_pkey'),
    sa.UniqueConstraint('machine_id', name='sagemcom_machine_machine_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('event_codes_settings_per_company',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('event_code_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('code', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('definition', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('type_new', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('type', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('level', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('source', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('internal_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sub_code', sa.VARCHAR(length=550), autoincrement=False, nullable=True),
    sa.Column('sub_code_key', sa.VARCHAR(length=225), autoincrement=False, nullable=True),
    sa.Column('manual_resolve', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('call_center', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('editable', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('system', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('technical', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('visible', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_code_id'], ['event_codes.id'], name='event_codes_settings_per_company_event_codes_id_fk', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='event_codes_settings_per_company_vending_companies_id_fk', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='event_codes_settings_per_company_pkey')
    )
    op.create_table('broker_wallettransaction',
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('total_amount', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('saldo_pos', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('is_vend', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['broker_televendsession.id'], name='broker_wallettransac_session_id_81dbc3aa_fk_broker_te', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('transaction_id', name='broker_wallettransaction_pkey')
    )
    op.create_table('cleaning_schedule_log',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('message_type', postgresql.ENUM('cleaning_report', 'maintenance_report', 'programmed_cleaning', name='message_type_enum'), autoincrement=False, nullable=False),
    sa.Column('cleaning_report_log_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('programmed_cleaning_log_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('report_status_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['cleaning_report_log_id'], ['cleaning_report_log.id'], name='cleaning_schedule_log_cleaning_log_id_cleaning_log_fk', ondelete='SET NULL', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='cleaning_schedule_log_machine_id_machine_fk', ondelete='SET NULL', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['programmed_cleaning_log_id'], ['programmed_cleaning_log.id'], name='cleaning_schedule_log_programmed_log_id_programmed_log_fk', ondelete='SET NULL', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['report_status_id'], ['cleaning_report_status.id'], name='cleaning_schedule_log_report_status_id_report_status_fk', ondelete='SET NULL', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='cleaning_schedule_log_pkey')
    )
    op.create_table('machine_locations_working_time',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('machinelocation_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('timeinterval_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['machinelocation_id'], ['machine_locations.id'], name='machine_locations_wo_machinelocation_id_a5a64061_fk_machine_l', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['timeinterval_id'], ['time_interval.id'], name='machine_locations_wo_timeinterval_id_77733d92_fk_time_inte', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machine_locations_working_time_pkey'),
    sa.UniqueConstraint('machinelocation_id', 'timeinterval_id', name='machine_locations_workin_machinelocation_id_timei_8df5fbd6_uniq')
    )
    op.create_table('time_period',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='time_period_pkey')
    )
    op.create_table('route_productlistconfig',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('include_total_list', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('use_component_packing', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('use_minimum_product_packing', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('sort_by', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('default_route_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('use_labels', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('components_position', sa.VARCHAR(length=1), autoincrement=False, nullable=False),
    sa.Column('use_labels_in_whl', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('component_packing_rounding', sa.VARCHAR(length=1), autoincrement=False, nullable=False),
    sa.Column('product_packing_rounding', sa.VARCHAR(length=1), autoincrement=False, nullable=False),
    sa.Column('use_product_packing', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('include_actions_list', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('location_stock', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('urgency_calculation_day', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('export_warehouse', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.CheckConstraint('urgency_calculation_day >= 0', name='route_productlistconfig_urgency_calculation_day_check'),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='route_productlistcon_company_id_7b410f1b_fk_vending_c', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='route_productlistconfig_pkey'),
    sa.UniqueConstraint('company_id', name='route_productlistconfig_company_id_key')
    )
    op.create_table('layout_columns_tags',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('layoutcolumn_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tags_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['layoutcolumn_id'], ['layout_columns.id'], name='layout_columns_tags_layoutcolumn_id_7328fea1_fk_layout_co', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['tags_id'], ['tags.id'], name='layout_columns_tags_tags_id_d720bdf0_fk_tags_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='layout_columns_tags_pkey'),
    sa.UniqueConstraint('layoutcolumn_id', 'tags_id', name='layout_columns_tags_layoutcolumn_id_tags_id_6c98fc5d_uniq')
    )
    op.create_table('celery_taskmeta',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('task_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('result', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('traceback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('hidden', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('meta', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='celery_taskmeta_pkey'),
    sa.UniqueConstraint('task_id', name='celery_taskmeta_task_id_key')
    )
    op.create_table('machine_recipes',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('machine_recipes_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('column_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['column_id'], ['machine_columns.id'], name='machine_recipes_column_id_69b48a03_fk_machine_columns_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], name='machine_recipes_recipe_id_4b973f21_fk_recipes_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machine_recipes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('custom_users_assigned_companies',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('customuser_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('vendingcompany_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['customuser_id'], ['custom_users.user_ptr_id'], name='custom_users_assigne_customuser_id_be634141_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['vendingcompany_id'], ['vending_companies.id'], name='custom_users_assigne_vendingcompany_id_064df78a_fk_vending_c', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='custom_users_assigned_companies_pkey'),
    sa.UniqueConstraint('customuser_id', 'vendingcompany_id', name='custom_users_assigned_co_customuser_id_vendingcom_c0659ccb_uniq')
    )
    op.create_table('temp_custom_users_assigned_machines',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('customuser_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('broker_televendsession',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('broker_televendsession_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('saldo', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('card_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('card_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('session_mode', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('timeout', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('payment_amount', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('topup_amount', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('vend_count', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('status', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('vends', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('_price_multiplier', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('end_message_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('end_request_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('start_confirmed_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('start_message_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pin', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('pin_message_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.CheckConstraint('pin >= 0', name='broker_televendsession_pin_check'),
    sa.ForeignKeyConstraint(['end_message_id'], ['communication_log.id'], name='broker_televendsessi_end_message_id_7c4be2a3_fk_communica', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['end_request_id'], ['communication_log.id'], name='broker_televendsessi_end_request_id_311c3a84_fk_communica', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='broker_televendsession_machine_id_e8b8a40e_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['pin_message_id'], ['communication_log.id'], name='broker_televendsessi_pin_message_id_3288cd74_fk_communica', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['start_confirmed_id'], ['communication_log.id'], name='broker_televendsessi_start_confirmed_id_c4616d5a_fk_communica', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['start_message_id'], ['communication_log.id'], name='broker_televendsessi_start_message_id_ccbd939a_fk_communica', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='broker_televendsession_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('cashflow_groups',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('cashflow_groups_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('collection_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['cashflow_collections.id'], name='cashflow_groups_collection_id_3594e479_fk_cashflow_', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='cashflow_groups_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('packing_models',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('packing_models_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.VARCHAR(length=25), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('alive', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='packing_models_pkey'),
    sa.UniqueConstraint('name', name='packing_models_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('machine_product_components',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('current_quantity', sa.NUMERIC(precision=10, scale=4), autoincrement=False, nullable=False),
    sa.Column('max_quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('warning_quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('alarm_quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('next_fill_quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('next_expiry', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('notify_warning', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('component_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('today_loss_quantity', sa.NUMERIC(precision=10, scale=4), autoincrement=False, nullable=False),
    sa.Column('pushed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['product_component_items.id'], name='machine_product_comp_component_id_01955abb_fk_product_c', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='machine_product_components_machine_id_7e6b8459_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machine_product_components_pkey')
    )
    op.create_table('flyway_schema_history',
    sa.Column('installed_rank', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('version', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('script', sa.VARCHAR(length=1000), autoincrement=False, nullable=False),
    sa.Column('checksum', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('installed_by', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('installed_on', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('execution_time', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('success', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('installed_rank', name='flyway_schema_history_pk')
    )
    op.create_table('djcelery_periodictasks',
    sa.Column('ident', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('last_update', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('ident', name='djcelery_periodictasks_pkey')
    )
    op.create_table('machine_statuses',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('machine_statuses_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('last_status', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('last_refill_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_service_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_service_duration', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_refill_duration', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_vend_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_cash_vend_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_cashless_vend_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('connection_status', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('system_status', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('health_status', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('fill_status', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('last_valid_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_price_change', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_price_push', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_planogram_load', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_change_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_planogram_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_price_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_message_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_column_mapping_change', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_column_mapping_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_cashless_2_vend_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_cashless_3_vend_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_cash_collection_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('last_wallet_vend_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['last_change_user_id'], ['custom_users.user_ptr_id'], name='machine_statuses_last_change_user_id_de113156_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['last_column_mapping_user_id'], ['custom_users.user_ptr_id'], name='machine_statuses_last_column_mapping__ee21381c_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['last_planogram_user_id'], ['custom_users.user_ptr_id'], name='machine_statuses_last_planogram_user__ae1f5d51_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['last_price_user_id'], ['custom_users.user_ptr_id'], name='machine_statuses_last_price_user_id_0c934648_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machine_statuses_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('machine_brand',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('brand_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_info_id'], ['author_infos.id'], name='machine_brand_author_info_id_author_infos_fk', ondelete='CASCADE', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='machine_brand_company_id_vending_companies_fk', ondelete='CASCADE', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machine_brand_pkey')
    )
    op.create_table('warehouse_management',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('warehouse_management_id_seq'::regclass)"), nullable=False),
    sa.Column('delivery_option', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('negative_stock_allowed', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('alive', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='warehouse_management_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('machine_types',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('machine_types_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('code', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('cash_collection_duration', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cleaning_duration', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('refill_duration', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('is_default', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.CheckConstraint('cash_collection_duration >= 0', name='machine_types_cash_collection_duration_check'),
    sa.CheckConstraint('cleaning_duration >= 0', name='machine_types_cleaning_duration_check'),
    sa.CheckConstraint('refill_duration >= 0', name='machine_types_refill_duration_check'),
    sa.ForeignKeyConstraint(['author_info_id'], ['author_infos.id'], name='machine_types_author_info_id_d49f19ff_fk_author_infos_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='machine_types_owner_id_4393d049_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machine_types_pkey'),
    sa.UniqueConstraint('author_info_id', name='machine_types_author_info_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('external_planogram_application_log',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('correlation_id', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('external_planogram_id', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('external_machine_id', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('SUCCESS', 'FAILURE', name='external_planogram_status_enum'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='external_planogram_application_log_pkey')
    )
    op.create_table('skill_types',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('skill_types_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('alive', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='skill_types_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='skill_types_pkey'),
    sa.UniqueConstraint('name', 'company_id', name='skill_types_name_company_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('administration_historicalvendingcompany',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('city', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('logo', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('aes_key', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('truck_stock', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('country_code', sa.VARCHAR(length=2), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=False),
    sa.Column('timezone', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('wallet_creation', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('urgency_limit_3', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('urgency_limit_4', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('expiry_affects_urgency', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('day_urg_3', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('day_urg_4', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('facing_affects_urgency', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('facing_urgency_3', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('facing_urgency_4', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('working_days', sa.VARCHAR(length=7), autoincrement=False, nullable=False),
    sa.Column('cashreport_time', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('urgency_calculation_time', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('urgency_calculation_times', postgresql.ARRAY(postgresql.TIME()), autoincrement=False, nullable=False),
    sa.Column('decimal_places', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('default_max_credit', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('televend_keep_alive_addresses', postgresql.ARRAY(sa.VARCHAR(length=30)), autoincrement=False, nullable=True),
    sa.Column('undefined_column_forced_warning', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('history_id', sa.INTEGER(), nullable=False),
    sa.Column('history_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('history_change_reason', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('history_type', sa.VARCHAR(length=1), autoincrement=False, nullable=False),
    sa.Column('access_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('default_device_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('distributor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('history_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('external_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('route_microservice', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('light_speed_integration', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('amiclo', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('integration_newis', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('integration_wallet', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('column_mapping_setting', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('extra_pricelists_setting', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('days_between_cc', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('is_eva_dts_readout_enabled', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('eva_dts_readout_time', sa.VARCHAR(length=24), server_default=sa.text("'000000000000000000000000'::character varying"), autoincrement=False, nullable=False),
    sa.Column('telecom_operator_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('eva_dts_readout_time_array', postgresql.ARRAY(sa.SMALLINT()), server_default=sa.text("'{}'::smallint[]"), autoincrement=False, nullable=False),
    sa.Column('horeca', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('warehouse_management_enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('warehouse_management_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('amiclo_ds_licence', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('amiclo_ds_unlimited_licence', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('vat_number', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('certificate', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('certificate_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.CheckConstraint('amiclo_ds_licence >= 0', name='amiclo_ds_licence_positive'),
    sa.CheckConstraint('amiclo_ds_unlimited_licence >= 0', name='amiclo_ds_unlimited_licence_positive'),
    sa.CheckConstraint('column_mapping_setting >= 0', name='administration_historicalvendingco_column_mapping_setting_check'),
    sa.CheckConstraint('decimal_places >= 0', name='administration_historicalvendingcompany_decimal_places_check'),
    sa.CheckConstraint('extra_pricelists_setting >= 0', name='administration_historicalvending_extra_pricelists_setting_check'),
    sa.CheckConstraint('status >= 0', name='administration_historicalvendingcompany_status_check'),
    sa.ForeignKeyConstraint(['history_user_id'], ['auth_user.id'], name='administration_histo_history_user_id_aa2b11eb_fk_auth_user', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('history_id', name='administration_historicalvendingcompany_pkey')
    )
    op.create_table('user_roles',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('is_service', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('is_filler', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('machines', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('machine_setup', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('products', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('refill', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('cash_details', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('vend_list', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('cashflow', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('other_reports', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('events', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('routes', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('vehicle', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('v_stock', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('users', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('field', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('cash_collection_induce', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('administration_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('reports_builder_access', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('importer', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('importer_edit', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('importer_view', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_roles_pkey')
    )
    op.create_table('administration_instantsystemsdevice',
    sa.Column('device_ptr_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['device_ptr_id'], ['administration_device.id'], name='admin_instantsystems_device_ptr_id_0000000_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('device_ptr_id', name='administration_instantsystemsdevice_pkey')
    )
    op.create_table('product_brands',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='product_brands_owner_id_eed90352_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='product_brands_pkey')
    )
    op.create_table('report_eventhistoric',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('occurrences', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('identifier', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='report_eventhistoric_machine_id_e93c4819_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='report_eventhistoric_pkey')
    )
    op.create_table('cashbag_conforms',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('cashbag_conforms_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('count_coins', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('count_bills', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('tokens_number', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('tokens_total', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('count_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('count_receive_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('collect', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('collect_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('diff', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cashbag_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cashflow_collection_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('collect_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('count_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('route_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('external_route_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('external_route_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('no_cashbag_reason', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_info_id'], ['author_infos.id'], name='cashbag_conforms_author_info_id_299e1a62_fk_author_infos_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['cashbag_id'], ['cashbags.id'], name='cashbag_conforms_cashbag_id_83139826_fk_cashbags_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['cashflow_collection_id'], ['cashflow_collections.id'], name='cashbag_conforms_cashflow_collection__fd622b7e_fk_cashflow_', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['collect_user_id'], ['custom_users.user_ptr_id'], name='cashbag_conforms_collect_user_id_0668aea1_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['count_user_id'], ['custom_users.user_ptr_id'], name='cashbag_conforms_count_user_id_15d59bec_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='cashbag_conforms_machine_id_b83a769c_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['route_id'], ['route_route.id'], name='cashbag_conforms_route_id_4fa9232d_fk_route_route_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='cashbag_conforms_pkey'),
    sa.UniqueConstraint('author_info_id', name='cashbag_conforms_author_info_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('route_routemachineproductcolumn',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('planned', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('reserved', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('used', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('column_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('routemachineproduct_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['column_id'], ['machine_columns.id'], name='route_routemachinepr_column_id_a6484257_fk_machine_c', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['routemachineproduct_id'], ['route_routemachineproduct.id'], name='route_routemachinepr_routemachineproduct__23c3f8d0_fk_route_rou', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='route_routemachineproductcolumn_pkey'),
    sa.UniqueConstraint('routemachineproduct_id', 'column_id', name='route_routemachineproduc_routemachineproduct_id_c_2ff1d26a_uniq')
    )
    op.create_table('cash_bag_tracking',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('safe_barcode', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('action', postgresql.ENUM('Cash bag scanned', 'Reassigned', 'Replacement bag scanned', 'Moved to van', 'Moved to cash room', 'Reassign pending', 'Reassign aborted', 'Reassign declined', 'Reassign canceled', 'Moved to transit location', 'Moved to final destination', name='cash_bag_action'), autoincrement=False, nullable=False),
    sa.Column('cash_bag_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cash_bag_conform_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('location_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cash_room_agent', sa.VARCHAR(length=61), autoincrement=False, nullable=True),
    sa.Column('filler_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('previous_owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('warehouse_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('replacement_cash_bag_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('next_owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('note', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('receipt_path', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('export_status', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cash_bag_conform_id'], ['cashbag_conforms.id'], name='cash_bag_tracking_cash_bag_conform_id_ba180296_fk_cashbag_c', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['cash_bag_id'], ['cashbags.id'], name='cash_bag_tracking_cash_bag_id_3a8aca33_fk_cashbags_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='cash_bag_tracking_company_id_5099aa33_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['filler_id'], ['custom_users.user_ptr_id'], name='cash_bag_tracking_filler_id_b502834f_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['location_type_id'], ['cash_bag_location_type.id'], name='cash_bag_tracking_location_type_id_18577873_fk_cash_bag_', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['next_owner_id'], ['custom_users.user_ptr_id'], name='cash_bag_tracking_next_owner_id_custom_user_ptr_id_fk', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['previous_owner_id'], ['custom_users.user_ptr_id'], name='cash_bag_tracking_previous_owner_id_3acd8743_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['replacement_cash_bag_id'], ['cashbags.id'], name='cash_bag_tracking_replacement_cash_bag_8a947817_fk_cashbags_', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['warehouse_id'], ['administration_warehouse.id'], name='cash_bag_tracking_warehouse_id_1fa84914_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='cash_bag_tracking_pkey')
    )
    op.create_table('cash_collection_snapshot_request',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('collected_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('INITIATED', 'RESPONSE_OK', 'RESPONSE_ERROR', 'COLLECTED', name='snapshot_request_status'), autoincrement=False, nullable=False),
    sa.Column('cashflow_collection_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('induced', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cashflow_collection_id'], ['cashflow_collections.id'], name='cash_collection_snap_cashflow_collection__b3ceb177_fk_cashflow_', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='cash_collection_snap_machine_id_158f85c6_fk_machines_', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['custom_users.user_ptr_id'], name='cash_collection_snap_user_id_983c134e_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='cash_collection_snapshot_request_pkey')
    )
    op.create_table('machine_model',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('model_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_info_id'], ['author_infos.id'], name='machine_model_author_info_id_author_infos_fk', ondelete='CASCADE', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='machine_model_company_id_vending_companies_fk', ondelete='CASCADE', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machine_model_pkey')
    )
    op.create_table('machine_data',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('machine_data_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('image', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('thumb', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('installation_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('model_number', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('serial_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('build_standard', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('asset_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='machine_data_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('transaction_summaries_fees',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('value', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('count', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('total', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('transaction_summary_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['transaction_summary_id'], ['transaction_summaries.id'], name='transaction_summarie_transaction_summary__4f6c2633_fk_transacti', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='transaction_summaries_fees_pkey')
    )
    op.create_table('custom_users_working_time',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('customuser_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('timeinterval_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['customuser_id'], ['custom_users.user_ptr_id'], name='custom_users_working_customuser_id_e3229fea_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['timeinterval_id'], ['time_interval.id'], name='custom_users_working_timeinterval_id_ba0927da_fk_time_inte', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='custom_users_working_time_pkey'),
    sa.UniqueConstraint('customuser_id', 'timeinterval_id', name='custom_users_working_tim_customuser_id_timeinterv_0a005682_uniq')
    )
    op.create_table('transaction_items',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('transaction_items_id_seq'::regclass)"), nullable=False),
    sa.Column('productID', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('code', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('cost', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('price', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('discount', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('deposit', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('total', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.CheckConstraint('quantity >= 0', name='transaction_items_quantity_check'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='transaction_items_product_id_435fe271_fk_products_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], name='transaction_items_transaction_id_a95ae82e_fk_transactions_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='transaction_items_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('event_correlations',
    sa.Column('correlation_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('event_list_id', postgresql.ARRAY(sa.BIGINT()), autoincrement=False, nullable=False),
    sa.Column('ts', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('correlation_id', name='event_correlations_pkey')
    )
    op.create_table('transaction_tenders_bills',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('value', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('count', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('direction', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('amount', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('transaction_tender_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['transaction_tender_id'], ['transaction_tenders.id'], name='transaction_tenders__transaction_tender_i_10b4bb4a_fk_transacti', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='transaction_tenders_bills_pkey')
    )
    op.create_table('exporters_ltoinducedcc',
    sa.Column('uuid', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('generated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('hash', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('file_path', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('build_number', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('delivered', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('delivered_filename', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('delivered_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('cash_collection_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.CheckConstraint('build_number >= 0', name='exporters_ltoinducedcc_build_number_check'),
    sa.ForeignKeyConstraint(['cash_collection_id'], ['cashflow_collections.id'], name='exporters_ltoinduced_cash_collection_id_065a6a1f_fk_cashflow_', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='exporters_ltoinduced_company_id_81a63569_fk_vending_c', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='exporters_ltoinducedcc_machine_id_d04d3c60_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('uuid', name='exporters_ltoinducedcc_pkey')
    )
    op.create_table('transactions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('transactions_id_seq'::regclass)"), nullable=False),
    sa.Column('market_id', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('kiosk_id', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('consumer_id', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('consumer_name', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('sale_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('sale_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('vends', postgresql.ARRAY(sa.BIGINT()), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='transactions_machine_id_44eb55d2_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='transactions_owner_id_b2d62ccb_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='transactions_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('exporters_processederpfile',
    sa.Column('uuid', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('generated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('hash', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('file_path', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('custom_filename', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('grouping_option', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('raw_files_uuids', postgresql.ARRAY(postgresql.UUID()), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='exporters_processede_company_id_d626a0fb_fk_vending_c', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('uuid', name='exporters_processederpfile_pkey')
    )
    op.create_table('administration_unicumdevice',
    sa.Column('device_ptr_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_import_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['device_ptr_id'], ['administration_device.id'], name='administration_unicu_device_ptr_id_33101ed4_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('device_ptr_id', name='administration_unicumdevice_pkey')
    )
    op.create_table('tax_rates',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('tax_rates_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('value', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('default', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_info_id'], ['author_infos.id'], name='tax_rates_author_info_id_671057cb_fk_author_infos_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='tax_rates_owner_id_678c784b_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='tax_rates_pkey'),
    sa.UniqueConstraint('author_info_id', name='tax_rates_author_info_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('televend_config',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('televend_config_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('operation_mode', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('price_mode', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('vend_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('scale_factor', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('decimal_point', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('free_vend', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('change_return', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('failed_vend_refund', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('overpay', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('max_credit', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('group_address', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('group_level', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('max_response', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('interbyte_time', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('enable_coins', sa.VARCHAR(length=4), autoincrement=False, nullable=False),
    sa.Column('coin_changer_mode', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('tube_level_warning', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('maximum_change', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('accept_when_low_tube_level', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('enable_banknotes', sa.VARCHAR(length=4), autoincrement=False, nullable=False),
    sa.Column('security_level', sa.VARCHAR(length=4), autoincrement=False, nullable=False),
    sa.Column('banknote_mode', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('cashless_mode', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('t_wallet', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('recharge_limit', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('eva_dts_mode', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('baud_rate', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('passcode', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('security_code', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('change_prices', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('age_verification_system', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('t_wallet_use_pin', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('cashless_mode_2', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('recharge_limit_2', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('display_messages', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('enable_escrow', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('preselection_for_cashless', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('t_wallet_recharge_limit', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('currency', sa.VARCHAR(length=4), autoincrement=False, nullable=False),
    sa.Column('data_collection_bluetooth', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('keep_alive_address', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('t_wallet_bluetooth', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('cashless_mode_3', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('recharge_limit_3', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('ignore_price_incorrect', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('ignore_price_incorrect_2', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('ignore_price_incorrect_3', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('ignore_price_incorrect_t_wallet', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('pricelist_cashless', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('pricelist_cashless_2', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('pricelist_cashless_3', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('pricelist_cashless_t_wallet', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('electronic_tray_label', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('temperature_sensor_mode', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('temperature_sensor_setting', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('special_handling_1', sa.VARCHAR(length=8), autoincrement=False, nullable=False),
    sa.Column('special_handling_2', sa.VARCHAR(length=8), autoincrement=False, nullable=False),
    sa.Column('special_handling_3', sa.VARCHAR(length=8), autoincrement=False, nullable=False),
    sa.Column('tube_cash_accept', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('tube_level_exact_change_denomination', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('tube_level_exact_change_message', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('tube_level_warning_cash_acceptance', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('tube_level_warning_denomination', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('pricelist_cashless_2_offset', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('pricelist_cashless_3_offset', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('pricelist_cashless_offset', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('pricelist_cashless_t_wallet_offset', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('baud_rate_auxport', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('change_prices_auxport', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('eva_dts_mode_auxport', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('passcode_auxport', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('security_code_auxport', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('payment_device_type', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('payment_device_type_2', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('payment_device_type_3', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('dynamic_configuration', sa.TEXT(), autoincrement=False, nullable=True),
    sa.CheckConstraint('accept_when_low_tube_level >= 0', name='televend_config_accept_when_low_tube_level_cee70ea4_check'),
    sa.CheckConstraint('age_verification_system >= 0', name='televend_config_age_verification_system_fb0b1a7f_check'),
    sa.CheckConstraint('banknote_mode >= 0', name='televend_config_banknote_mode_d53a31e8_check'),
    sa.CheckConstraint('cashless_mode >= 0', name='televend_config_cashless_mode_bd17d599_check'),
    sa.CheckConstraint('cashless_mode_2 >= 0', name='televend_config_cashless_mode_2_5d953bd9_check'),
    sa.CheckConstraint('cashless_mode_3 >= 0', name='televend_config_cashless_mode_3_check'),
    sa.CheckConstraint('change_prices >= 0', name='televend_config_change_prices_cfe93858_check'),
    sa.CheckConstraint('change_prices_auxport >= 0', name='televend_config_change_prices_auxport_check'),
    sa.CheckConstraint('change_return >= 0', name='televend_config_change_return_2436d54a_check'),
    sa.CheckConstraint('coin_changer_mode >= 0', name='televend_config_coin_changer_mode_e7f1a658_check'),
    sa.CheckConstraint('data_collection_bluetooth >= 0', name='televend_config_data_collection_bluetooth_check'),
    sa.CheckConstraint('decimal_point >= 0', name='televend_config_decimal_point_1efee5df_check'),
    sa.CheckConstraint('display_messages >= 0', name='televend_config_display_messages_check'),
    sa.CheckConstraint('eva_dts_mode >= 0', name='televend_config_eva_dts_mode_4f1965b0_check'),
    sa.CheckConstraint('eva_dts_mode_auxport >= 0', name='televend_config_eva_dts_mode_auxport_check'),
    sa.CheckConstraint('failed_vend_refund >= 0', name='televend_config_failed_vend_refund_1c68b8ba_check'),
    sa.CheckConstraint('free_vend >= 0', name='televend_config_free_vend_713795da_check'),
    sa.CheckConstraint('group_address >= 0', name='televend_config_group_address_3aa8bea3_check'),
    sa.CheckConstraint('group_level >= 0', name='televend_config_group_level_2a58fa2b_check'),
    sa.CheckConstraint('operation_mode >= 0', name='televend_config_operation_mode_dff7eaf4_check'),
    sa.CheckConstraint('preselection_for_cashless >= 0', name='televend_config_preselection_for_cashless_check'),
    sa.CheckConstraint('price_mode >= 0', name='televend_config_price_mode_4bba05f0_check'),
    sa.CheckConstraint('pricelist_cashless >= 0', name='televend_config_pricelist_cashless_check'),
    sa.CheckConstraint('pricelist_cashless_2 >= 0', name='televend_config_pricelist_cashless_2_check'),
    sa.CheckConstraint('pricelist_cashless_2_offset >= 0', name='televend_config_pricelist_cashless_2_offset_check'),
    sa.CheckConstraint('pricelist_cashless_3 >= 0', name='televend_config_pricelist_cashless_3_check'),
    sa.CheckConstraint('pricelist_cashless_3_offset >= 0', name='televend_config_pricelist_cashless_3_offset_check'),
    sa.CheckConstraint('pricelist_cashless_offset >= 0', name='televend_config_pricelist_cashless_offset_check'),
    sa.CheckConstraint('pricelist_cashless_t_wallet >= 0', name='televend_config_pricelist_cashless_t_wallet_check'),
    sa.CheckConstraint('pricelist_cashless_t_wallet_offset >= 0', name='televend_config_pricelist_cashless_t_wallet_offset_check'),
    sa.CheckConstraint('t_wallet >= 0', name='televend_config_t_wallet_1ef60df0_check'),
    sa.CheckConstraint('t_wallet_bluetooth >= 0', name='televend_config_t_wallet_bluetooth_check'),
    sa.CheckConstraint('t_wallet_use_pin >= 0', name='televend_config_t_wallet_use_pin_187e9455_check'),
    sa.CheckConstraint('temperature_sensor_mode >= 0', name='televend_config_temperature_sensor_mode_check'),
    sa.CheckConstraint('tube_level_exact_change_denomination >= 0', name='televend_config_tube_level_exact_change_denomination_check'),
    sa.CheckConstraint('tube_level_warning_cash_acceptance >= 0', name='televend_config_tube_level_warning_cash_acceptance_check'),
    sa.CheckConstraint('tube_level_warning_denomination >= 0', name='televend_config_tube_level_warning_denomination_check'),
    sa.CheckConstraint('vend_type >= 0', name='televend_config_vend_type_7e62c269_check'),
    sa.ForeignKeyConstraint(['author_info_id'], ['author_infos.id'], name='televend_config_author_info_id_dd99435e_fk_author_infos_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='televend_config_pkey'),
    sa.UniqueConstraint('author_info_id', name='televend_config_author_info_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('products_tags',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tags_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='products_tags_product_id_44c8dcae_fk_products_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['tags_id'], ['tags.id'], name='products_tags_tags_id_d7230577_fk_tags_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='products_tags_pkey'),
    sa.UniqueConstraint('product_id', 'tags_id', name='products_tags_product_id_tags_id_eab4d551_uniq')
    )
    op.create_table('author_infos',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('author_infos_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('date_created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('date_modified', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['custom_users.user_ptr_id'], name='author_infos_created_by_id_d58bdefe_fk_custom_users_user_ptr_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['modified_by_id'], ['custom_users.user_ptr_id'], name='author_infos_modified_by_id_08cb540f_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='author_infos_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('tenant',
    sa.Column('tenant_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('tenant_id', name='tenant_pkey')
    )
    op.create_table('machine_empty_products_log',
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('empty_ts', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('refill_ts', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('refill_type', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('machine_id', 'product_id', 'empty_ts', name='machine_empty_products_log_pkey')
    )
    op.create_table('clients',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('clients_id_seq'::regclass)"), nullable=False),
    sa.Column('caption', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('code', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('external_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('client_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('client_address', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('contact_person', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_info_id'], ['author_infos.id'], name='clients_author_info_id_fd2cdb43_fk_author_infos_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['client_type_id'], ['client_types.id'], name='clients_client_type_id_e04a991b_fk_client_types_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='clients_owner_id_70c42260_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['clients.id'], name='clients_parent_id_b66370c9_fk_clients_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='clients_pkey'),
    sa.UniqueConstraint('author_info_id', name='clients_author_info_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('recipes',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('recipes_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('code', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('default', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='recipes_product_id_2d198bf7_fk_products_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='recipes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('exporters_ltomachine',
    sa.Column('uuid', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('generated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('hash', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('file_path', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('build_number', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('route_machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('delivered', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('delivered_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('delivered_filename', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('external_route_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.CheckConstraint('build_number >= 0', name='exporters_ltomachine_build_number_check'),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='exporters_ltomachine_company_id_f1a8670a_fk_vending_c', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='exporters_ltomachine_machine_id_81796cd8_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['route_machine_id'], ['route_routemachine.id'], name='exporters_ltomachine_route_machine_id_7dc58390_fk_route_rou', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('uuid', name='exporters_ltomachine_pkey')
    )
    op.create_table('component_packing_size',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('barcode', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('default', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('system_default', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('unit', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('number_of_packs', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('component_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('packing_name_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['component_id'], ['product_component_items.id'], name='component_packing_si_component_id_dd58f48f_fk_product_c', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='component_packing_si_owner_id_76376f28_fk_vending_c', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['packing_name_id'], ['packing_name.id'], name='component_packing_si_packing_name_id_a17f4129_fk_packing_n', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='component_packing_size_pkey')
    )
    op.create_table('bulk_command_process',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('firmware_link', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('finished_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('triggered_by_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('command', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['triggered_by_id'], ['custom_users.user_ptr_id'], name='administration_bulkf_triggered_by_id_0d3d68b1_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='administration_bulkfirmwareupdate_pkey')
    )
    op.create_table('broker_mobiletoken',
    sa.Column('token', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('card_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('card_type', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vending_operator_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['vending_operator_id'], ['vending_companies.id'], name='broker_mobiletoken_vending_operator_id_858f8548_fk_vending_c', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('token', name='broker_mobiletoken_pkey')
    )
    op.create_table('administration_importtype',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('ordering_by', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='administration_importtype_pkey')
    )
    op.create_table('nayax_device',
    sa.Column('device_ptr_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_import_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['device_ptr_id'], ['administration_device.id'], name='nayax_device_device_ptr_id_56de3920_fk_administration_device_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('device_ptr_id', name='nayax_device_pkey')
    )
    op.create_table('auth_user',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('auth_user_id_seq'::regclass)"), nullable=False),
    sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=254), autoincrement=False, nullable=False),
    sa.Column('is_staff', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('date_joined', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='auth_user_pkey'),
    sa.UniqueConstraint('username', name='auth_user_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('vends_per_company',
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('insert_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('device', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('value', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.UniqueConstraint('machine_id', 'date', 'device', 'insert_date', name='uq_vends_per_company')
    )
    op.create_table('products',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('products_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('code', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('image', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('thumb', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('price', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('weight', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('is_composite', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('minimum_route_pickup', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('blacklisted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('minimum_allowed_age', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('shelf_life', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('deleted_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tax_rate_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('external_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('is_combo', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('use_packing', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('barcode', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('product_warehouse_position', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('height', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('length', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('purchase_price', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('width', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('barcode_1', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('barcode_2', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('barcode_3', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('barcode_4', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('deposit_refund', sa.NUMERIC(precision=12, scale=2), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_info_id'], ['author_infos.id'], name='products_author_info_id_7f0df3ef_fk_author_infos_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['category_id'], ['product_categories.id'], name='products_category_id_a7a3a156_fk_product_categories_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['deleted_by_id'], ['custom_users.user_ptr_id'], name='products_deleted_by_id_e4330cc2_fk_custom_users_user_ptr_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='products_owner_id_13ed5e13_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['tax_rate_id'], ['tax_rates.id'], name='products_tax_rate_id_383100cb_fk_tax_rates_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='products_pkey'),
    sa.UniqueConstraint('author_info_id', name='products_author_info_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('vends_per_machine_product_monthly',
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vend_month', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('insert_month', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('device', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('value', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('rowcnt', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.UniqueConstraint('machine_id', 'product_id', 'vend_month', 'insert_month', 'device', name='uq_vends_per_machine_product_monthly')
    )
    op.create_table('regions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('location_clusters_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('map_shape', sa.VARCHAR(length=2000), autoincrement=False, nullable=False),
    sa.Column('status', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('last_message_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('deleted_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('external_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_info_id'], ['author_infos.id'], name='location_clusters_author_info_id_783dce09_fk_author_infos_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['deleted_by_id'], ['custom_users.user_ptr_id'], name='location_clusters_deleted_by_id_2cf9855e_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='location_clusters_owner_id_4f8c7421_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['regions.id'], name='location_clusters_parent_id_53aba3ea_fk_location_clusters_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='location_clusters_pkey'),
    sa.UniqueConstraint('author_info_id', name='location_clusters_author_info_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('dex_device',
    sa.Column('device_ptr_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_import_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['device_ptr_id'], ['administration_device.id'], name='dex_device_device_ptr_id_6eac00cb_fk_administration_device_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('device_ptr_id', name='dex_device_pkey')
    )
    op.create_table('administration_micromarket365device',
    sa.Column('device_ptr_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_import_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['device_ptr_id'], ['administration_device.id'], name='administration_micro_device_ptr_id_ddb81565_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('device_ptr_id', name='administration_micromarket365device_pkey')
    )
    op.create_table('broker_authenticatemail',
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('token', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('card_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('card_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='broker_authenticatem_company_id_ff67f2f1_fk_vending_c', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('token', name='broker_authenticatemail_pkey')
    )
    op.create_table('exporters_distrilogaudit',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('generated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('filename_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('file_path', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('hash', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('status', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('cashflow_collection_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fill_event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.CheckConstraint('status >= 0', name='exporters_distrilogaudit_status_check'),
    sa.ForeignKeyConstraint(['cashflow_collection_id'], ['cashflow_collections.id'], name='exporters_distriloga_cashflow_collection__e52965df_fk_cashflow_', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['fill_event_id'], ['fill_event.id'], name='exporters_distriloga_fill_event_id_f03916eb_fk_fill_even', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='exporters_distrilogaudit_machine_id_96523999_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='exporters_distrilogaudit_pkey')
    )
    op.create_table('machine_columns',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('machine_columns_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('index', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('current_quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('max_quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('warning_quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('alarm_quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('next_fill_quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('price_2', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('is_custom_price', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_discount_price', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('minimum_route_pickup', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('notify_warning', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('changed_price', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('changed_price_2', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('pushed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('blocked', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('failed_vend_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('freevend', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('next_expiry', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('combo_recipe_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('today_loss_quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('view_index', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('changed_index', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('changed_price_3', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('changed_price_4', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('changed_price_5', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('price_3', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('price_4', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('price_5', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('changed_mapped_indexes', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=True),
    sa.Column('mapped_indexes', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=False),
    sa.Column('product_rotation', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('product_rotation_group_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['combo_recipe_id'], ['combo_recipes.id'], name='machine_columns_combo_recipe_id_a7084d3c_fk_combo_recipes_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='machine_columns_machine_id_b6fad360_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='machine_columns_product_id_2bde11d3_fk_products_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['product_rotation_group_id'], ['product_rotation_groups.id'], name='machine_columns_product_rotation_gro_9e6d7a18_fk_product_r', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], name='machine_columns_recipe_id_6bbc6c01_fk_recipes_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machine_columns_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('administration_device',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('administration_device_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('pid', sa.VARCHAR(length=45), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('device_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('connection_status', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('tolerated_offline', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.CheckConstraint('tolerated_offline >= 0', name='administration_device_tolerated_offline_check'),
    sa.ForeignKeyConstraint(['device_type_id'], ['administration_devicetype.id'], name='administration_devic_device_type_id_e66427c2_fk_administr', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='administration_device_owner_id_f71c509b_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='administration_device_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('product_categories',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('product_categories_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('position', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('code', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.CheckConstraint('"position" >= 0', name='product_categories_position_check'),
    sa.ForeignKeyConstraint(['author_info_id'], ['author_infos.id'], name='product_categories_author_info_id_39fe0c02_fk_author_infos_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='product_categories_owner_id_5f9bc62f_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='product_categories_pkey'),
    sa.UniqueConstraint('author_info_id', name='product_categories_author_info_id_key'),
    sa.UniqueConstraint('owner_id', 'position', name='product_categories_owner_id_position_b96adfc8_uniq'),
    postgresql_ignore_search_path=False
    )
    op.create_table('auth_user_groups',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], name='auth_user_groups_group_id_97559544_fk_auth_group_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='auth_user_groups_user_id_6a12ed8b_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_user_groups_pkey'),
    sa.UniqueConstraint('user_id', 'group_id', name='auth_user_groups_user_id_group_id_94350c0c_uniq')
    )
    op.create_table('transaction_tenders_coins',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('value', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('count', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('direction', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('amount', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('transaction_tender_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['transaction_tender_id'], ['transaction_tenders.id'], name='transaction_tenders__transaction_tender_i_8ce55280_fk_transacti', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='transaction_tenders_coins_pkey')
    )
    op.create_table('timestamps__machine_types',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('insert_timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('update_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='timestamps__machine_types_pkey')
    )
    op.create_table('vat_number_examples',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('country', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('prefix', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('example', sa.VARCHAR(length=90), autoincrement=False, nullable=True),
    sa.Column('min_character', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('max_character', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='vat_number_examples_pkey')
    )
    op.create_table('transaction_items_taxes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('value', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('count', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('rate', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('total', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('transaction_item_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['transaction_item_id'], ['transaction_items.id'], name='transaction_items_ta_transaction_item_id_92262eb0_fk_transacti', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='transaction_items_taxes_pkey')
    )
    op.create_table('machineclusters',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('machineclusters_id_seq'::regclass)"), nullable=False),
    sa.Column('caption', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('cluster_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_modified', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('deleted_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('external_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_info_id'], ['author_infos.id'], name='machineclusters_author_info_id_473b918e_fk_author_infos_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='machineclusters_company_id_a34c9e3e_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['deleted_by_id'], ['custom_users.user_ptr_id'], name='machineclusters_deleted_by_id_490c6671_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machineclusters_pkey'),
    sa.UniqueConstraint('author_info_id', name='machineclusters_author_info_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('communication_log',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('communication_log_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('command', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('error', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('ip', sa.VARCHAR(length=15), autoincrement=False, nullable=False),
    sa.Column('incoming', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('data', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('response_ok', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('responded_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('request_message_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='communication_log_machine_id_addafa91_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['responded_by'], ['communication_log.id'], name='communication_log_responded_by_6ce99c38_fk_communication_log_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='communication_log_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('event_codes',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('event_codes_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('code', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('definition', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('type', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('level', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('type_new', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('internal_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('source', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sub_code', sa.VARCHAR(length=550), autoincrement=False, nullable=True),
    sa.Column('sub_code_key', sa.VARCHAR(length=225), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('manual_resolve', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('call_center', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('editable', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('system', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('technical', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('visible', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='event_codes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('machine_empty_columns_log',
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('column_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('empty_ts', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('refill_ts', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('refill_type', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('machine_id', 'column_id', 'empty_ts', name='machine_empty_columns_log_pkey')
    )
    op.create_table('administration_warehouse_working_time',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('warehouse_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('timeinterval_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['timeinterval_id'], ['time_interval.id'], name='administration_wareh_timeinterval_id_ac3f05b4_fk_time_inte', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['warehouse_id'], ['administration_warehouse.id'], name='administration_wareh_warehouse_id_ddfbc908_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='administration_warehouse_working_time_pkey'),
    sa.UniqueConstraint('warehouse_id', 'timeinterval_id', name='administration_warehouse_warehouse_id_timeinterva_ad59c0c9_uniq')
    )
    op.create_table('djcelery_periodictask',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('task', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('args', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('kwargs', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('queue', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('exchange', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('routing_key', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('expires', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('last_run_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('total_run_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date_changed', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('crontab_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('interval_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.CheckConstraint('total_run_count >= 0', name='djcelery_periodictask_total_run_count_check'),
    sa.ForeignKeyConstraint(['crontab_id'], ['djcelery_crontabschedule.id'], name='djcelery_periodictas_crontab_id_75609bab_fk_djcelery_', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['interval_id'], ['djcelery_intervalschedule.id'], name='djcelery_periodictas_interval_id_b426ab02_fk_djcelery_', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='djcelery_periodictask_pkey'),
    sa.UniqueConstraint('name', name='djcelery_periodictask_name_key')
    )
    op.create_table('auth_permission',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('auth_permission_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('codename', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['content_type_id'], ['django_content_type.id'], name='auth_permission_content_type_id_2f476e4b_fk_django_co', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_permission_pkey'),
    sa.UniqueConstraint('content_type_id', 'codename', name='auth_permission_content_type_id_codename_01ab375a_uniq'),
    postgresql_ignore_search_path=False
    )
    op.create_table('timestamps__machines',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('insert_timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('update_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='timestamps__machines_pkey')
    )
    op.create_table('machine_columns_tags',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('machinecolumn_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tags_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machinecolumn_id'], ['machine_columns.id'], name='machine_columns_tags_machinecolumn_id_b7c6d0af_fk_machine_c', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['tags_id'], ['tags.id'], name='machine_columns_tags_tags_id_565b8ef3_fk_tags_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machine_columns_tags_pkey'),
    sa.UniqueConstraint('machinecolumn_id', 'tags_id', name='machine_columns_tags_machinecolumn_id_tags_id_367614a8_uniq')
    )
    op.create_table('administration_importerftpconfiguration',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('port', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('changed_by_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('company_importer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['changed_by_id'], ['custom_users.user_ptr_id'], name='administration_impor_changed_by_id_0eab7e4d_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['company_importer_id'], ['administration_vendingcompanyimporter.id'], name='administration_impor_company_importer_id_352693ca_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='administration_importerftpconfiguration_pkey')
    )
    op.create_table('machine_recipe_components',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.NUMERIC(precision=10, scale=4), autoincrement=False, nullable=False),
    sa.Column('component_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_recipe_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['product_component_items.id'], name='machine_recipe_compo_component_id_713ae655_fk_product_c', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_recipe_id'], ['machine_recipes.id'], name='machine_recipe_compo_machine_recipe_id_39c392ba_fk_machine_r', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machine_recipe_components_pkey')
    )
    op.create_table('route_routemachineproduct',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('planned', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('reserved', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('used', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('routemachine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['route_routeproduct.id'], name='route_routemachinepr_product_id_33737ebe_fk_route_rou', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['routemachine_id'], ['route_routemachine.id'], name='route_routemachinepr_routemachine_id_d44de4e2_fk_route_rou', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='route_routemachineproduct_pkey'),
    sa.UniqueConstraint('routemachine_id', 'product_id', name='route_routemachineproduc_routemachine_id_product__40bc81bf_uniq')
    )
    op.create_table('djcelery_workerstate',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('hostname', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('last_heartbeat', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='djcelery_workerstate_pkey'),
    sa.UniqueConstraint('hostname', name='djcelery_workerstate_hostname_key')
    )
    op.create_table('user_skill_assignments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('skill_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('skill_level_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['skill_level_id'], ['skill_levels.id'], name='user_skill_assignments_skill_level_id_fkey'),
    sa.ForeignKeyConstraint(['skill_type_id'], ['skill_types.id'], name='user_skill_assignments_skill_type_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['custom_users.user_ptr_id'], name='user_skill_assignments_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_skill_assignments_pkey'),
    sa.UniqueConstraint('user_id', 'skill_type_id', name='user_skill_assignments_user_id_skill_type_id_key')
    )
    op.create_table('call_centre_reporting_channel',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('channel_type', postgresql.ENUM('televendcloud', 'phone', 'email', name='channel_type_enum'), autoincrement=False, nullable=False),
    sa.Column('channel_info', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name='call_centre_reporting_channel_client_id_client_fk', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='call_centre_reporting_channel_pkey')
    )
    op.create_table('administration_deletedcolumns',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('index', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('confirmed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='administration_delet_machine_id_ff4ffce3_fk_machines_', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='administration_deletedcolumns_pkey')
    )
    op.create_table('timestamps__machine_data',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('insert_timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('update_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='timestamps__machine_data_pkey')
    )
    op.create_table('machineclusters_fillers',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('machinecluster_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('customuser_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['customuser_id'], ['custom_users.user_ptr_id'], name='machineclusters_fill_customuser_id_dfdb92db_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machinecluster_id'], ['machineclusters.id'], name='machineclusters_fill_machinecluster_id_f27ec5e8_fk_machinecl', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machineclusters_fillers_pkey'),
    sa.UniqueConstraint('machinecluster_id', 'customuser_id', name='machineclusters_fillers_machinecluster_id_custom_47787000_uniq')
    )
    op.create_table('cro_fiscal_mapping',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('code', sa.VARCHAR(length=5), autoincrement=False, nullable=False),
    sa.Column('payment_type', postgresql.ENUM('DA', 'CA', 'DB', 'TA', 'PA3', 'PA4', 'DC', 'DD', 'WLT', 'NEG', name='televend_payment_type'), autoincrement=False, nullable=True),
    sa.Column('operation_mode_code', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('payment_device_code', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['code'], ['cro_fiscal_code.code'], name='cro_fiscal_mapping_code_fkey'),
    sa.ForeignKeyConstraint(['operation_mode_code'], ['operation_mode.code'], name='cro_fiscal_mapping_operation_mode_code_fkey'),
    sa.ForeignKeyConstraint(['payment_device_code'], ['payment_device_type.code'], name='cro_fiscal_mapping_payment_device_code_fkey'),
    sa.PrimaryKeyConstraint('id', name='cro_fiscal_mapping_pkey'),
    sa.UniqueConstraint('payment_type', 'operation_mode_code', 'payment_device_code', name='cro_fiscal_mapping_payment_type_operation_mode_code_payment_key')
    )
    op.create_table('cashflow_collections',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('cashflow_collections_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('init_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('counter_action', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_coin_change', sa.NUMERIC(precision=14, scale=4), autoincrement=False, nullable=False),
    sa.Column('total_cash_sales', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('total_cashless_revaluation', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('total_cashless_overpay', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('total_overpay', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('total_cashless_televend', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('total_cashless_mdb', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('message_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('route_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_cashless_2_mdb', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('total_cashless_2_overpay', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('total_cashless_2_revaluation', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('total_number_of_cash_sales', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('total_cashless_revaluation_da401', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('induction_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('in_test_mode', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('total_tokens_num', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('total_tokens_value', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('total_cashless_3_mdb', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('total_cashless_3_overpay', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('total_cashless_3_revaluation', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('external_route_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('external_route_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('absolute_total', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('insert_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['induction_id'], ['cash_collection_induction.id'], name='cashflow_collections_induction_id_5563b06b_fk_cash_coll', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='cashflow_collections_machine_id_eab29109_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['message_id'], ['communication_log.id'], name='cashflow_collections_message_id_1c95e2bb_fk_communica', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['route_id'], ['route_route.id'], name='cashflow_collections_route_id_e10ae4a5_fk_route_route_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['custom_users.user_ptr_id'], name='cashflow_collections_user_id_6a3eb775_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='cashflow_collections_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('payment_devices',
    sa.Column('id', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='payment_devices_pkey')
    )
    op.create_table('broker_order',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('state', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('card_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('receipt_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('zki', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('jir', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('amount', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=False),
    sa.Column('language', sa.VARCHAR(length=3), autoincrement=False, nullable=False),
    sa.Column('payment_gateway', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('order_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('payment_gateway_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('wallet_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('cloud_operator_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cc_no_masked', sa.VARCHAR(length=16), autoincrement=False, nullable=False),
    sa.Column('error_code', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('error_text', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('ref_card_no', sa.VARCHAR(length=16), autoincrement=False, nullable=False),
    sa.Column('ref_file_no', sa.VARCHAR(length=25), autoincrement=False, nullable=False),
    sa.Column('response_code', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('response_text', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('status', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cloud_operator_id'], ['vending_companies.id'], name='broker_order_cloud_operator_id_849b7f8f_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='broker_order_pkey')
    )
    op.create_table('mdb_event_codes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('mdb_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('level', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_code_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_code_id'], ['event_codes.id'], name='mdb_event_codes_event_code_id_08063f4a_fk_event_codes_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='mdb_event_codes_pkey')
    )
    op.create_table('fill_log',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('quantity', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('container_max_quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('old_quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('source', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fill_percentage', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fill_type', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('value', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('column_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('component_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('insert_time', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['column_id'], ['machine_columns.id'], name='fill_log_column_id_4519f8cf_fk_machine_columns_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['component_id'], ['product_component_items.id'], name='fill_log_component_id_9ff55bf1_fk_product_component_items_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['event_id'], ['fill_event.id'], name='fill_log_event_id_9e1f3945_fk_fill_event_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='fill_log_machine_id_e5c32ef2_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='fill_log_product_id_b7b24568_fk_products_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['custom_users.user_ptr_id'], name='fill_log_user_id_a4708e18_fk_custom_users_user_ptr_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='fill_log_pkey')
    )
    op.create_table('vending_companies',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('vending_companies_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('city', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('aes_key', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('truck_stock', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('country_code', sa.VARCHAR(length=2), autoincrement=False, nullable=True),
    sa.Column('timezone', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('wallet_creation', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('urgency_limit_3', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('urgency_limit_4', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('expiry_affects_urgency', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('day_urg_3', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('day_urg_4', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('working_days', sa.VARCHAR(length=7), autoincrement=False, nullable=False),
    sa.Column('cashreport_time', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('decimal_places', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('access_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('distributor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('logo', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('urgency_calculation_time', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('facing_affects_urgency', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('facing_urgency_3', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('facing_urgency_4', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('urgency_calculation_times', postgresql.ARRAY(postgresql.TIME()), autoincrement=False, nullable=False),
    sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=False),
    sa.Column('televend_keep_alive_addresses', postgresql.ARRAY(sa.VARCHAR(length=30)), autoincrement=False, nullable=True),
    sa.Column('default_max_credit', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('default_device_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('undefined_column_forced_warning', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('route_microservice', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('light_speed_integration', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('amiclo', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('integration_newis', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('integration_wallet', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('column_mapping_setting', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('extra_pricelists_setting', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('days_between_cc', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('is_eva_dts_readout_enabled', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('eva_dts_readout_time', sa.VARCHAR(length=24), server_default=sa.text("'000000000000000000000000'::character varying"), autoincrement=False, nullable=False),
    sa.Column('telecom_operator_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('eva_dts_readout_time_array', postgresql.ARRAY(sa.SMALLINT()), server_default=sa.text("'{}'::smallint[]"), autoincrement=False, nullable=False),
    sa.Column('horeca', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('warehouse_management_enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('warehouse_management_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('amiclo_ds_licence', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('amiclo_ds_unlimited_licence', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('country', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vat_number', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('certificate', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('certificate_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.CheckConstraint('amiclo_ds_licence >= 0', name='amiclo_ds_licence_positive'),
    sa.CheckConstraint('amiclo_ds_unlimited_licence >= 0', name='amiclo_ds_unlimited_licence_positive'),
    sa.CheckConstraint('column_mapping_setting >= 0', name='vending_companies_column_mapping_setting_check'),
    sa.CheckConstraint('decimal_places >= 0', name='vending_companies_decimal_places_check'),
    sa.CheckConstraint('extra_pricelists_setting >= 0', name='vending_companies_extra_pricelists_setting_check'),
    sa.CheckConstraint('status >= 0', name='vending_companies_status_check'),
    sa.ForeignKeyConstraint(['access_id'], ['administration_companyaccess.id'], name='vending_companies_access_id_7c362f2c_fk_administr', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['author_info_id'], ['author_infos.id'], name='vending_companies_author_info_id_61178ffc_fk_author_infos_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['default_device_type_id'], ['administration_devicetype.id'], name='vending_companies_default_device_type__e5764c2b_fk_administr', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['distributor_id'], ['custom_users.user_ptr_id'], name='vending_companies_distributor_id_2cb01d2f_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['telecom_operator_id'], ['telecom_operators.id'], name='vending_companies_telecom_operator_id_cb0658b3_fk_telecom_o', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['warehouse_management_id'], ['warehouse_management.id'], name='administration_company_warehouse_management_fk', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='vending_companies_pkey'),
    sa.UniqueConstraint('author_info_id', name='vending_companies_author_info_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('programmed_cleaning_log',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('domain_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pid', sa.VARCHAR(length=45), autoincrement=False, nullable=False),
    sa.Column('dose_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dose_water', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('frequency', postgresql.ENUM('monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday', 'all_days', 'working_days', 'weekend_days', 'every_frequency_time', name='programmed_cleaning_frequency_enum'), autoincrement=False, nullable=True),
    sa.Column('frequency_time', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('inactivity_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_blocking', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('name', postgresql.ENUM('automatic', 'inactivity', 'programmed', name='programmed_cleaning_name_enum'), autoincrement=False, nullable=False),
    sa.Column('number_of_selections', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('time_slot', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('log_type', postgresql.ENUM('complete_machine', 'mixer', 'brewer', 'hot_water', 'brewer_with_tablet', 'cold_water', 'tea_brewer', 'tea_umount', 'milk', 'milk_complete', 'complete_machine_advance', 'lavazza_brewer', 'syrup', 'milk_evo_cleaning', 'milk_evo_inactivity', 'not_valid', name='cleaning_report_type_enum'), autoincrement=False, nullable=False),
    sa.Column('message_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='programmed_cleaning_log_pkey')
    )
    op.create_table('custom_users_assigned_clusters',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('customuser_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('locationcluster_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['customuser_id'], ['custom_users.user_ptr_id'], name='custom_users_assigne_customuser_id_b335ce28_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['locationcluster_id'], ['regions.id'], name='custom_users_assigne_locationcluster_id_31871cd8_fk_location_', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='custom_users_assigned_clusters_pkey'),
    sa.UniqueConstraint('customuser_id', 'locationcluster_id', name='custom_users_assigned_cl_customuser_id_locationcl_5a912fab_uniq')
    )
    op.create_table('route_truckstock',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('route_truckstock_id_seq'::regclass)"), nullable=False),
    sa.Column('last_modified', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('truck_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='route_truckstock_company_id_2b9dac9d_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['truck_id'], ['vehicles.id'], name='route_truckstock_truck_id_1efd1500_fk_vehicles_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='route_truckstock_pkey'),
    sa.UniqueConstraint('truck_id', name='route_truckstock_truck_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('machine_column_vend_data',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('quantity_since_init', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('value_since_init', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('last_vend_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('column_index', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='machine_column_vend_data_machine_id_8b4e15ee_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machine_column_vend_data_pkey')
    )
    op.create_table('combo_products',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='combo_products_product_id_cd6fe387_fk_products_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['recipe_id'], ['combo_recipes.id'], name='combo_products_recipe_id_59ce6346_fk_combo_recipes_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='combo_products_pkey')
    )
    op.create_table('administration_sipdevice',
    sa.Column('device_ptr_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_import_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_import_type', sa.VARCHAR(length=1), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['device_ptr_id'], ['administration_device.id'], name='administration_sipde_device_ptr_id_0ccf9297_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('device_ptr_id', name='administration_sipdevice_pkey')
    )
    op.create_table('auth_user_user_permissions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], name='auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_user_user_permissions_pkey'),
    sa.UniqueConstraint('user_id', 'permission_id', name='auth_user_user_permissions_user_id_permission_id_14a6b632_uniq')
    )
    op.create_table('external_cashless_references',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('serial', sa.VARCHAR(length=31), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='external_cashless_references_pkey'),
    sa.UniqueConstraint('serial', name='external_cashless_references_serial_key')
    )
    op.create_table('broker_unsentwallettransaction',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('card_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('card_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('total_amount', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('saldo_pos', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('transaction_group', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('sent', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='broker_unsentwallett_machine_id_ea08f3d3_fk_machines_', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['session_id'], ['broker_televendsession.id'], name='broker_unsentwallett_session_id_8d78d679_fk_broker_te', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='broker_unsentwallettransaction_pkey')
    )
    op.create_table('third_party_integration_type',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('third_party_integration_type_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='third_party_integration_type_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('skill_levels',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('alive', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='skill_levels_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='skill_levels_pkey'),
    sa.UniqueConstraint('name', 'company_id', name='skill_levels_name_company_id_key')
    )
    op.create_table('sagemcom_televend_request',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('sno', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('request_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('requested_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('responded_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['machine_id'], ['sagemcom_machine.id'], name='sagemcom_televend_re_machine_id_97f3800b_fk_sagemcom_', onupdate='CASCADE', ondelete='CASCADE', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='sagemcom_televend_request_pkey'),
    sa.UniqueConstraint('sno', name='sagemcom_televend_request_sno_key')
    )
    op.create_table('djcelery_intervalschedule',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('every', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('period', sa.VARCHAR(length=24), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='djcelery_intervalschedule_pkey')
    )
    op.create_table('timestamps__administration_companyaccess',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('insert_timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('update_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='timestamps__administration_companyaccess_pkey')
    )
    op.create_table('layout_components',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('max_quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('warning_quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('notify_warning', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('next_fill_quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('component_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('layout_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tags', postgresql.ARRAY(sa.VARCHAR(length=30)), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['product_component_items.id'], name='layout_components_component_id_cf75880e_fk_product_c', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['layout_id'], ['product_templates.id'], name='layout_components_layout_id_f1eb4fba_fk_product_templates_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='layout_components_pkey')
    )
    op.create_table('time_interval',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='time_interval_pkey')
    )
    op.create_table('operation_mode',
    sa.Column('code', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('code_description', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('code', name='operation_mode_pkey')
    )
    op.create_table('product_rotation_groups',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('product_rotation_groups_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('last_change_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_change_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['last_change_user_id'], ['custom_users.user_ptr_id'], name='product_rotation_gro_last_change_user_id_bd196ad9_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='product_rotation_gro_owner_id_05e7ce52_fk_vending_c', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='product_rotation_groups_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('product_rotation_assignments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('rotation_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rotation_group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='product_rotation_assignments_product_id_2f20e803_fk_products_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['rotation_group_id'], ['product_rotation_groups.id'], name='product_rotation_ass_rotation_group_id_1ca67b5c_fk_product_r', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='product_rotation_assignments_pkey')
    )
    op.create_table('timestamps__administration_device_machines',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('insert_timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('update_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='timestamps__administration_device_machines_pkey')
    )
    op.create_table('company_packing_models',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('packing_model_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('company_access_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['company_access_id'], ['administration_companyaccess.id'], name='company_packing_models_company_access_id_fkey'),
    sa.ForeignKeyConstraint(['packing_model_id'], ['packing_models.id'], name='company_packing_models_packing_model_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='company_packing_models_pkey'),
    sa.UniqueConstraint('packing_model_id', 'company_access_id', name='company_packing_models_packing_model_id_company_access_id_key')
    )
    op.create_table('commission_percentage_range',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('commission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('value', postgresql.NUMRANGE(), autoincrement=False, nullable=False),
    sa.Column('percentage', sa.NUMERIC(precision=7, scale=4), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['commission_id'], ['contract_commission_rule.id'], name='commission_percentage_range_commission_id_commission_fk', ondelete='CASCADE', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='commission_percentage_range_pkey')
    )
    op.create_table('broker_brokercredentials',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('token', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='broker_brokercredentials_pkey')
    )
    op.create_table('administration_machineperiodexclusion',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('period_exclude_from', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('period_exclude_to', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('created_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['custom_users.user_ptr_id'], name='administration_machi_created_by_id_f1b61b18_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='administration_machi_machine_id_234595c3_fk_machines_', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['updated_by_id'], ['custom_users.user_ptr_id'], name='administration_machi_updated_by_id_655dfc57_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='administration_machineperiodexclusion_pkey')
    )
    op.create_table('cash_snapshot_scheduled_jobs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('cron_jobs', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='cash_snapshot_scheduled_jobs_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='cash_snapshot_scheduled_jobs_pkey'),
    sa.UniqueConstraint('owner_id', name='cash_snapshot_scheduled_jobs_owner_id_key')
    )
    op.create_table('payment_device_type',
    sa.Column('code', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('code_description', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('code', name='payment_device_type_pkey')
    )
    op.create_table('route_routemachinefileupload',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('route_external_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('file_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('file_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('uploaded', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('filler_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('route_machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['filler_id'], ['custom_users.user_ptr_id'], name='route_routemachinefi_filler_id_9e330c14_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='route_routemachinefileupload_machine_id_07883ced_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['route_machine_id'], ['route_routemachine.id'], name='route_routemachinefi_route_machine_id_19eb7367_fk_route_rou', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='route_routemachinefileupload_pkey')
    )
    op.create_table('broker_topup',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='broker_topup_machine_id_eac2ad9a_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['session_id'], ['broker_televendsession.id'], name='broker_topup_session_id_f9e9027b_fk_broker_televendsession_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='broker_topup_pkey')
    )
    op.create_table('single_denominations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('multiplier', sa.NUMERIC(precision=8, scale=2), autoincrement=False, nullable=False),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['cashflow_groups.id'], name='single_denominations_group_id_e181f942_fk_cashflow_groups_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='single_denominations_pkey')
    )
    op.create_table('unicum_collection',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('vend_ids', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=False),
    sa.Column('vend_data_hashes', postgresql.ARRAY(sa.VARCHAR(length=64)), autoincrement=False, nullable=False),
    sa.Column('collection_start_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('collection_end_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('end_collection_id', sa.VARCHAR(length=16), autoincrement=False, nullable=True),
    sa.Column('start_collection_id', sa.VARCHAR(length=16), autoincrement=False, nullable=True),
    sa.Column('offline_vend_ids', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=False),
    sa.Column('offline_vends_collected', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('online_vends_collected', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='unicum_collection_machine_id_58329cde_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='unicum_collection_pkey'),
    sa.UniqueConstraint('machine_id', 'end_collection_id', name='unicum_collection_machine_id_end_collection_id_a79fbf69_uniq'),
    sa.UniqueConstraint('machine_id', 'start_collection_id', name='unicum_collection_machine_id_start_collection_id_afe68f93_uniq')
    )
    op.create_table('administration_payterdevice',
    sa.Column('device_ptr_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['device_ptr_id'], ['administration_device.id'], name='administration_payter_device_ptr_id_00000000_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('device_ptr_id', name='administration_payterdevice_pkey')
    )
    op.create_table('auth_group',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='auth_group_pkey'),
    sa.UniqueConstraint('name', name='auth_group_name_key')
    )
    op.create_table('django_site',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('domain', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_site_pkey'),
    sa.UniqueConstraint('domain', name='django_site_domain_a2e37b91_uniq')
    )
    op.create_table('administration_historicalimporterftpconfigurationmasterdata',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('ftp_path', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    sa.Column('file_delimiters', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('cron_time_hour', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('history_id', sa.INTEGER(), nullable=False),
    sa.Column('history_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('history_change_reason', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('history_type', sa.VARCHAR(length=1), autoincrement=False, nullable=False),
    sa.Column('category_import_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('changed_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('company_importer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('history_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vending_company_ftp_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cron_time_min', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('device', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cash_collect', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('event', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('vend', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['history_user_id'], ['auth_user.id'], name='administration_histo_history_user_id_6bbc657f_fk_auth_user', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('history_id', name='administration_historicalimporterftpconfigurationmasterdat_pkey')
    )
    op.create_table('route_routeproduct',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('route_routeproduct_id_seq'::regclass)"), nullable=False),
    sa.Column('component_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['product_component_items.id'], name='route_routeproduct_component_id_48f966cd_fk_product_c', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='route_routeproduct_product_id_55f791ef_fk_products_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='route_routeproduct_pkey'),
    sa.UniqueConstraint('component_id', name='route_routeproduct_component_id_key'),
    sa.UniqueConstraint('product_id', name='route_routeproduct_product_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('timestamps__administration_machineoperation',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('insert_timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('update_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='timestamps__administration_machineoperation_pkey')
    )
    op.create_table('django_migrations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('app', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('applied', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_migrations_pkey')
    )
    op.create_table('administration_devicehistory',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('activated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deactivated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('device_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['administration_device.id'], name='administration_devic_device_id_379ceded_fk_administr', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='administration_devicehistory_machine_id_2bbcd57a_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='administration_devicehistory_pkey')
    )
    op.create_table('settings',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('theme_css_url', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('additional_head_content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='settings_pkey')
    )
    op.create_table('device_status',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('voltage_battery', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('voltage_min', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('voltage_max', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('internal_temperature_min', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('internal_temperature_max', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('fuse', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('external_temperature_min', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('external_temperature_max', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('device_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['administration_televenddevice.device_ptr_id'], name='device_status_device_id_dd216600_fk_administr', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='device_status_machine_id_0b08bee3_fk_machines_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='device_status_pkey')
    )
    op.create_table('cpi_device',
    sa.Column('device_ptr_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_import_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['device_ptr_id'], ['administration_device.id'], name='cpi_device_device_ptr_id_52ab9d24_fk_administration_device_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('device_ptr_id', name='cpi_device_pkey')
    )
    op.create_table('vehicles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('vehicles_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='vehicles_owner_id_8cbe0576_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='vehicles_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('telecom_operators',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('telecom_operators_id_seq'::regclass)"), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='telecom_operators_pkey'),
    sa.UniqueConstraint('caption', name='telecom_operators_caption_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('machineclusters_assigned_machines',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('machinecluster_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='machineclusters_assi_machine_id_f2ec7871_fk_machines_', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machinecluster_id'], ['machineclusters.id'], name='machineclusters_assi_machinecluster_id_93f5d393_fk_machinecl', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='machineclusters_assigned_machines_pkey'),
    sa.UniqueConstraint('machinecluster_id', 'machine_id', name='machineclusters_assigned_machinecluster_id_machin_5ff396fd_uniq')
    )
    op.create_table('transaction_tenders',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('type', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('amount', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('reference', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], name='transaction_tenders_transaction_id_b426c60d_fk_transactions_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='transaction_tenders_pkey')
    )
    op.create_table('televend_dynamic_config_history',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('device_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('configuration_string', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('action', postgresql.ENUM('SAVE', 'PUSH', name='televend_dynamic_config_action_enum'), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='televend_dynamic_config_history_pkey')
    )
    op.create_table('client_types',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('client_types_id_seq'::regclass)"), nullable=False),
    sa.Column('caption', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('author_info_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_info_id'], ['author_infos.id'], name='client_types_author_info_id_0ffc96f6_fk_author_infos_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['vending_companies.id'], name='client_types_owner_id_7d0a69d9_fk_vending_companies_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['client_types.id'], name='client_types_parent_id_0ad7954b_fk_client_types_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='client_types_pkey'),
    sa.UniqueConstraint('author_info_id', name='client_types_author_info_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('timestamps__administration_device',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('insert_timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('update_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='timestamps__administration_device_pkey')
    )
    op.create_table('commission_group',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('contract_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('business_model_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('all_locations', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('assigned_locations', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['business_model_id'], ['business_model.id'], name='commission_group_business_model_id_business_model_fk', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['contract_id'], ['contract.id'], name='commission_group_contract_id_contract_fk', ondelete='CASCADE', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='commission_group_pkey'),
    sa.UniqueConstraint('contract_id', 'business_model_id', name='commission_group_contract_id_business_model_id_key')
    )
    op.create_table('route_truckstockitem',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('truck_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.CheckConstraint('quantity >= 0', name='route_truckstockitem_quantity_check'),
    sa.ForeignKeyConstraint(['product_id'], ['route_routeproduct.id'], name='route_truckstockitem_product_id_15242123_fk_route_rou', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['truck_id'], ['route_truckstock.id'], name='route_truckstockitem_truck_id_70b0c091_fk_route_truckstock_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='route_truckstockitem_pkey')
    )
    op.create_table('third_party_integration',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('integration_role_sequence', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('integration_role_name', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('integration_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['integration_type_id'], ['third_party_integration_type.id'], name='third_party_integrat_integration_type_id_950b58cb_fk_third_par', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['custom_users.user_ptr_id'], name='third_party_integrat_user_id_61c80892_fk_custom_us', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='third_party_integration_pkey'),
    sa.UniqueConstraint('user_id', 'integration_type_id', name='third_party_integration_user_id_integration_type_1faf6291_uniq')
    )
    op.create_table('combo_recipes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('code', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('caption', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='combo_recipes_product_id_d96559f8_fk_products_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='combo_recipes_pkey')
    )
    op.create_table('administration_device_machines',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('device_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('_ver', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['administration_device.id'], name='administration_devic_device_id_d40227ea_fk_administr', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='administration_devic_machine_id_ad103bf4_fk_machines_', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='administration_device_machines_pkey'),
    sa.UniqueConstraint('device_id', 'machine_id', name='administration_device_ma_device_id_machine_id_016ed31f_uniq')
    )
    op.create_table('timestamps__administration_devicetype',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('insert_timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('update_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='timestamps__administration_devicetype_pkey')
    )
    op.create_table('cleaning_report_log',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('alive', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('message_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('domain_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pid', sa.VARCHAR(length=45), autoincrement=False, nullable=False),
    sa.Column('name', postgresql.ENUM('manual', 'automatic', 'inactive', 'planned', name='cleaning_report_name_enum'), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('skipped', 'started', 'finished_ok', 'finished_with_error', 'performed_with_no_detergent', name='cleaning_report_status_enum'), autoincrement=False, nullable=False),
    sa.Column('log_type', postgresql.ENUM('complete_machine', 'mixer', 'brewer', 'hot_water', 'brewer_with_tablet', 'cold_water', 'tea_brewer', 'tea_umount', 'milk', 'milk_complete', 'complete_machine_advance', 'lavazza_brewer', 'syrup', 'milk_evo_cleaning', 'milk_evo_inactivity', 'not_valid', name='cleaning_report_type_enum'), autoincrement=False, nullable=False),
    sa.Column('evo_milk_error_code', postgresql.ENUM('rinsing_skip', 'rinsing_fail', 'cleaning_skip', 'cleaning_fail', name='cleaning_report_evo_milk_error_code_enum'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='cleaning_report_log_pkey')
    )
    op.create_table('vending_company_assigned_device',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('tolerated_offline', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('device_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.CheckConstraint('tolerated_offline >= 0', name='vending_company_assigned_device_tolerated_offline_check'),
    sa.ForeignKeyConstraint(['company_id'], ['vending_companies.id'], name='vending_company_assi_company_id_8e9186c5_fk_vending_c', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['device_type_id'], ['administration_devicetype.id'], name='vending_company_assi_device_type_id_62db3d2c_fk_administr', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='vending_company_assigned_device_pkey')
    )
    op.create_table('main_twitter',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('author', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('tweet', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('error', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='main_twitter_pkey')
    )
    # ### end Alembic commands ###
